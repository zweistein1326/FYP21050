{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/routers/appRouter.tsx\";\nimport { Router } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport { createBrowserHistory } from 'history';\nimport Login from \"../pages/Login\";\nimport Home from \"../pages/Home\";\nimport Register from \"../pages/Register\";\nimport CredentialPage from \"../pages/CredentialPage\";\nimport AddCredential from \"../pages/AddCredential\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const history = createBrowserHistory();\n\nconst AppRouter = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: \"/\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n      path: \"/register\",\n      component: Register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/user/:id\",\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/user/:id/:credentialId\",\n      component: CredentialPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/addCredential\",\n      component: AddCredential\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/routers/appRouter.tsx"],"names":["Router","PrivateRoute","PublicRoute","createBrowserHistory","Login","Home","Register","CredentialPage","AddCredential","history","AppRouter"],"mappings":";AAAA,SAASA,MAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,OAAO,MAAMC,OAAO,GAAGN,oBAAoB,EAApC;;AAEP,MAAMO,SAAS,GAAG,MAAM;AACpB,sBACI,QAAC,MAAD;AAAA,4BAEQ,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEN;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHR,eAIQ,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,WAAnB;AAA+B,MAAA,SAAS,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,yBAAnB;AAA6C,MAAA,SAAS,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,YALR,eAMQ,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,gBAAnB;AAAoC,MAAA,SAAS,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;KAAME,S;AAeN,eAAeA,SAAf","sourcesContent":["import { Router, Routes } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport {createBrowserHistory} from 'history';\nimport Login from \"../pages/Login\";\nimport Home from \"../pages/Home\";\nimport Register from \"../pages/Register\";\nimport CredentialPage from \"../pages/CredentialPage\";\nimport AddCredential from \"../pages/AddCredential\";\n\nexport const history = createBrowserHistory();\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            {/* <Routes> */}\n                <PublicRoute path=\"/\" component={Login} />\n                <PublicRoute path=\"/register\" component={Register} />\n                <PrivateRoute path=\"/user/:id\" component={Home} />\n                <PrivateRoute path=\"/user/:id/:credentialId\" component={CredentialPage} />\n                <PrivateRoute path=\"/addCredential\" component={AddCredential} />\n                {/* <PublicRoute component={NotFoundPage} /> */}\n            {/* </Routes> */}\n        </Router>\n    );\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}