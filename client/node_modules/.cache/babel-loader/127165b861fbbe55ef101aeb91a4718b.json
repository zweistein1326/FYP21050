{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/components/CredentialTile.tsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHANGESTATUS } from \"../graphql\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CredentialTile = props => {\n  _s();\n\n  const {\n    credential,\n    title\n  } = props;\n  const [changeCredentialStatus, {\n    loading,\n    error\n  }] = useMutation(CHANGESTATUS);\n  console.log(props.auth.user);\n\n  const getCredentialInfo = () => {// find info for credential\n  };\n\n  const acceptCredential = () => {\n    changeCredentialStatus({\n      variables: {\n        input: {\n          id: title,\n          ownerId: props.auth.user.id\n        }\n      }\n    }).then(res => {\n      const {\n        status\n      } = res.data.changeCredentialStatus;\n      console.log(status);\n    });\n  };\n\n  const rejectCredential = () => {// delink credential from user's account\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `${title}`,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: credential.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), credential.pending ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: acceptCredential,\n        color: \"success\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: rejectCredential,\n        color: \"error\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {},\n      color: \"error\",\n      variant: \"contained\",\n      sx: {\n        mt: 3,\n        mb: 2\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CredentialTile, \"jNBmd1FCXjDIA/F5NkBqCo6wdxE=\", false, function () {\n  return [useMutation];\n});\n\n_c = CredentialTile;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(CredentialTile);\n\nvar _c;\n\n$RefreshReg$(_c, \"CredentialTile\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/components/CredentialTile.tsx"],"names":["connect","Box","Button","Typography","Link","useMutation","CHANGESTATUS","CredentialTile","props","credential","title","changeCredentialStatus","loading","error","console","log","auth","user","getCredentialInfo","acceptCredential","variables","input","id","ownerId","then","res","status","data","rejectCredential","pending","mt","mb","mapStateToProps","state"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAe;AAAA;;AAClC,QAAM;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAAqBF,KAA3B;AACA,QAAM,CAACG,sBAAD,EAAwB;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAxB,IAA2CR,WAAW,CAACC,YAAD,CAA5D;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,IAAN,CAAWC,IAAvB;;AAEA,QAAMC,iBAAiB,GAAG,MAAI,CAC1B;AACH,GAFD;;AAIC,QAAMC,gBAAgB,GAAC,MAAI;AACxBR,IAAAA,sBAAsB,CAAC;AACnBS,MAAAA,SAAS,EAAC;AACNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,EAAE,EAACZ,KADA;AAEHa,UAAAA,OAAO,EAAEf,KAAK,CAACQ,IAAN,CAAWC,IAAX,CAAgBK;AAFtB;AADD;AADS,KAAD,CAAtB,CAOGE,IAPH,CAOSC,GAAD,IAAO;AACX,YAAM;AAACC,QAAAA;AAAD,UAAWD,GAAG,CAACE,IAAJ,CAAShB,sBAA1B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACH,KAVD;AAWH,GAZA;;AAcD,QAAME,gBAAgB,GAAG,MAAI,CACzB;AACH,GAFD;;AAIA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAElB,KAAM,EAAnB;AAAA,6BAAsB,QAAC,UAAD;AAAA,kBAAaD,UAAU,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,UAAU,CAACoB,OAAX,gBACD,QAAC,GAAD;AAAA,8BACA,QAAC,MAAD;AACA,QAAA,OAAO,EAAEV,gBADT;AAEA,QAAA,KAAK,EAAC,SAFN;AAGA,QAAA,OAAO,EAAC,WAHR;AAIA,QAAA,EAAE,EAAE;AAAEW,UAAAA,EAAE,EAAC,CAAL;AAAQC,UAAAA,EAAE,EAAC;AAAX,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAQA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,gBAAjB;AACA,QAAA,KAAK,EAAC,OADN;AAEA,QAAA,OAAO,EAAC,WAFR;AAGA,QAAA,EAAE,EAAE;AAAEE,UAAAA,EAAE,EAAC,CAAL;AAAQC,UAAAA,EAAE,EAAC;AAAX,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAiBD,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAI,CAAE,CAAvB;AACA,MAAA,KAAK,EAAC,OADN;AAEA,MAAA,OAAO,EAAC,WAFR;AAGA,MAAA,EAAE,EAAE;AAAED,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,EAAE,EAAC;AAAX,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAvDD;;GAAMxB,c;UAE+CF,W;;;KAF/CE,c;;AAyDN,MAAMyB,eAAe,GAAIC,KAAD,KAAgB;AACpCjB,EAAAA,IAAI,EAACiB,KAAK,CAACjB;AADyB,CAAhB,CAAxB;;AAGA,eAAehB,OAAO,CAACgC,eAAD,CAAP,CAAyBzB,cAAzB,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { connect } from \"react-redux\"\nimport { Box, Button, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHANGESTATUS } from \"../graphql\";\n\nconst CredentialTile = (props:any) => {\n    const {credential,title} = props;\n    const [changeCredentialStatus,{loading,error}] = useMutation(CHANGESTATUS);\n    console.log(props.auth.user);\n\n    const getCredentialInfo = ()=>{\n        // find info for credential\n    }\n\n     const acceptCredential=()=>{\n        changeCredentialStatus({\n            variables:{\n                input: {\n                    id:title,\n                    ownerId: props.auth.user.id\n                }\n            }\n        }).then((res)=>{\n            const {status} = res.data.changeCredentialStatus;\n            console.log(status);\n        })\n    }\n\n    const rejectCredential = ()=>{\n        // delink credential from user's account\n    }\n\n    return(\n        <Box>\n            <Link to={`${title}`}><Typography>{credential.title}</Typography></Link>\n            {credential.pending ?\n            <Box>\n            <Button \n            onClick={acceptCredential} \n            color=\"success\" \n            variant=\"contained\" \n            sx={{ mt:3, mb:2 }}>\n                Accept\n            </Button>\n            <Button onClick={rejectCredential}\n            color=\"error\"\n            variant=\"contained\"\n            sx={{ mt:3, mb:2 }}>\n                Reject\n            </Button>\n            </Box> \n            :\n            <Button onClick={()=>{}}\n            color=\"error\"\n            variant=\"contained\"\n            sx={{ mt:3, mb:2 }}>\n                Delete\n            </Button>}\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state:any) => ({\n    auth:state.auth\n})\nexport default connect(mapStateToProps)(CredentialTile);"]},"metadata":{},"sourceType":"module"}