{"ast":null,"code":"/* eslint linebreak-style: [\"error\", \"windows\"] */\n\n/* eslint-disable no-use-before-define */\nimport WordArray from './WordArray.js';\n/**\r\n * Latin1 encoding strategy.\r\n */\n\nconst Latin1 = {\n  /**\r\n     * Converts a word array to a Latin1 string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The Latin1 string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n     */\n  stringify(wordArray) {\n    // Shortcuts\n    const {\n      words,\n      sigBytes\n    } = wordArray; // Convert\n\n    const latin1Chars = [];\n\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\r\n     * Converts a Latin1 string to a word array.\r\n     *\r\n     * @param {string} latin1Str The Latin1 string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n     */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length; // Convert\n\n    const words = [];\n\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;\n    }\n\n    return new WordArray(words, latin1StrLength);\n  }\n\n};\nexport default Latin1;","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/node_modules/react-native-hash/JSHash/lib/core/Latin1.js"],"names":["WordArray","Latin1","stringify","wordArray","words","sigBytes","latin1Chars","i","bite","push","String","fromCharCode","join","parse","latin1Str","latin1StrLength","length","charCodeAt"],"mappings":"AAAA;;AACA;AAEA,OAAOA,SAAP,MAAsB,gBAAtB;AAGA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,SAAS,CAACC,SAAD,EAAY;AACnB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,SAA5B,CAFmB,CAInB;;AACA,UAAMG,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,IAAI,CAAnC,EAAsC;AACpC,YAAMC,IAAI,GAAIJ,KAAK,CAACG,CAAC,KAAK,CAAP,CAAL,KAAoB,KAAMA,CAAC,GAAG,CAAL,GAAU,CAApC,GAA0C,IAAvD;AACAD,MAAAA,WAAW,CAACG,IAAZ,CAAiBC,MAAM,CAACC,YAAP,CAAoBH,IAApB,CAAjB;AACD;;AAED,WAAOF,WAAW,CAACM,IAAZ,CAAiB,EAAjB,CAAP;AACD,GA1BY;;AA4Bb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,CAACC,SAAD,EAAY;AACf;AACA,UAAMC,eAAe,GAAGD,SAAS,CAACE,MAAlC,CAFe,CAIf;;AACA,UAAMZ,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,eAApB,EAAqCR,CAAC,IAAI,CAA1C,EAA6C;AAC3CH,MAAAA,KAAK,CAACG,CAAC,KAAK,CAAP,CAAL,IAAkB,CAACO,SAAS,CAACG,UAAV,CAAqBV,CAArB,IAA0B,IAA3B,KAAqC,KAAMA,CAAC,GAAG,CAAL,GAAU,CAAtE;AACD;;AAED,WAAO,IAAIP,SAAJ,CAAcI,KAAd,EAAqBW,eAArB,CAAP;AACD;;AApDY,CAAf;AAuDA,eAAed,MAAf","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n/* eslint-disable no-use-before-define */\r\n\r\nimport WordArray from './WordArray.js';\r\n\r\n\r\n/**\r\n * Latin1 encoding strategy.\r\n */\r\nconst Latin1 = {\r\n  /**\r\n     * Converts a word array to a Latin1 string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The Latin1 string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n     */\r\n  stringify(wordArray) {\r\n    // Shortcuts\r\n    const { words, sigBytes } = wordArray;\r\n\r\n    // Convert\r\n    const latin1Chars = [];\r\n    for (let i = 0; i < sigBytes; i += 1) {\r\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n      latin1Chars.push(String.fromCharCode(bite));\r\n    }\r\n\r\n    return latin1Chars.join('');\r\n  },\r\n\r\n  /**\r\n     * Converts a Latin1 string to a word array.\r\n     *\r\n     * @param {string} latin1Str The Latin1 string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n     */\r\n  parse(latin1Str) {\r\n    // Shortcut\r\n    const latin1StrLength = latin1Str.length;\r\n\r\n    // Convert\r\n    const words = [];\r\n    for (let i = 0; i < latin1StrLength; i += 1) {\r\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n    }\r\n\r\n    return new WordArray(words, latin1StrLength);\r\n  },\r\n};\r\n\r\nexport default Latin1;\r\n"]},"metadata":{},"sourceType":"module"}