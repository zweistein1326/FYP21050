{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/CredentialPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CredentialPage = props => {\n  _s();\n\n  const {\n    credentialId\n  } = useParams();\n  const [credential, setCredential] = useState(null);\n  const [isAuth, setAuth] = useState(props.auth.user !== null //set inital to public\n  );\n\n  const fetchCredentialInfo = () => {\n    var cred = props.auth.user.credentials[credentialId];\n    setCredential(cred);\n  };\n\n  useEffect(fetchCredentialInfo, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Hi this is credential no. \", `${credentialId}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), credential ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/user/${credential.issuer}`,\n          children: [\"Issuer: \", credential.issuer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/user/${credential.issuer}`,\n          children: [\"Credential: \", credential.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Signature: \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/user/${credential.issuer}`,\n          children: [\" \", credential.signature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Url:\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: credential.url,\n          children: [\" \", credential.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"View History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(CredentialPage, \"HJ7pMcA7Cye7MATy8XthNEBybKk=\", false, function () {\n  return [useParams];\n});\n\n_c = CredentialPage;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(CredentialPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CredentialPage\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/CredentialPage.tsx"],"names":["Typography","useEffect","useState","connect","Link","useParams","CredentialPage","props","credentialId","credential","setCredential","isAuth","setAuth","auth","user","fetchCredentialInfo","cred","credentials","issuer","value","signature","url","mapStateToProps","state"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,eAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAe;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAuBH,SAAS,EAAtC;AACA,QAAM,CAACI,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,CAAkB,IAAlB,CAA3C;AACA,QAAM,CAACS,MAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAC7BK,KAAK,CAACM,IAAN,CAAWC,IAAX,KAAoB,IADS,CACJ;AADI,GAAjC;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAIC,IAAI,GAAIT,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgBG,WAAhB,CAA4BT,YAA5B,CAAZ;AACAE,IAAAA,aAAa,CAACM,IAAD,CAAb;AACH,GAHD;;AAKAf,EAAAA,SAAS,CAACc,mBAAD,EAAqB,EAArB,CAAT;AAEA,sBACI;AAAA,4BACA,QAAC,UAAD;AAAA,+CACgC,GAAEP,YAAa,EAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAICC,UAAU,gBACX;AAAA,8BACI,QAAC,UAAD;AAAA,+BAAY,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQA,UAAU,CAACS,MAAO,EAArC;AAAA,iCAAiDT,UAAU,CAACS,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,+BAAY,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQT,UAAU,CAACS,MAAO,EAArC;AAAA,qCAAqDT,UAAU,CAACU,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAA,+CAAuB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQV,UAAU,CAACS,MAAO,EAArC;AAAA,0BAA0CT,UAAU,CAACW,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,UAAD;AAAA,wCAAgB;AAAG,UAAA,IAAI,EAAEX,UAAU,CAACY,GAApB;AAAA,0BAA2BZ,UAAU,CAACY,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADW,GAQR,IAZH;AAAA,kBADJ;AAiBH,CA/BD;;GAAMf,c;UAC2BD,S;;;KAD3BC,c;;AAiCN,MAAMgB,eAAe,GAAGC,KAAD,KAAc;AACjCV,EAAAA,IAAI,EAACU,KAAK,CAACV;AADsB,CAAd,CAAvB;;AAIA,eAAeV,OAAO,CAACmB,eAAD,CAAP,CAAyBhB,cAAzB,CAAf","sourcesContent":["import {Typography} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { Credential } from '../models/Credential';\n\nconst CredentialPage = (props:any) => {\n    const { credentialId }:any = useParams();\n    const [credential,setCredential] = useState<Credential|null>(null);\n    const [isAuth,setAuth] = useState(\n        props.auth.user !== null //set inital to public\n    );    \n    \n    const fetchCredentialInfo = () => {\n        var cred  = props.auth.user.credentials[credentialId];\n        setCredential(cred);\n    }\n\n    useEffect(fetchCredentialInfo,[]);\n    \n    return(\n        <>\n        <Typography>\n            Hi this is credential no. {`${credentialId}`}\n        </Typography>\n        {credential?\n        <>\n            <Typography><Link to={`/user/${credential.issuer}`}>Issuer: {credential.issuer}</Link></Typography>\n            <Typography><Link to={`/user/${credential.issuer}`}>Credential: {credential.value}</Link></Typography>\n            <Typography>Signature: <Link to={`/user/${credential.issuer}`}> {credential.signature}</Link></Typography>\n            <Typography>Url:<a href={credential.url}> {credential.url}</a></Typography>\n            <Typography>View History</Typography>\n        </>:\n           null}\n        \n        </>\n    )\n}\n\nconst mapStateToProps =(state:any)=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(CredentialPage);"]},"metadata":{},"sourceType":"module"}