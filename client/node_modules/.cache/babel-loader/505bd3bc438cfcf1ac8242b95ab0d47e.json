{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/routers/PublicRoute.tsx\";\nimport { connect } from \"react-redux\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PublicRoute = _ref => {\n  let {\n    isAuthenticated,\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/addCredential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 26\n  }, this);\n};\n_c = PublicRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/routers/PublicRoute.tsx"],"names":["connect","Route","Navigate","PublicRoute","isAuthenticated","component","Component","rest","mapStateToProps","state","auth","uid"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AASA,OAAO,MAAMC,WAAW,GAAG;AAAA,MAAC;AACxBC,IAAAA,eADwB;AAExBC,IAAAA,SAAS,EAAEC,SAFa;AAGxB,OAAGC;AAHqB,GAAD;AAAA,sBAGF,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,OAAO,EACzC,CAACH,eAAD,gBAAoB;AAAA,6BAAK,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAApB,gBAAgD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD/B;AAAA;AAAA;AAAA;AAAA,UAHE;AAAA,CAApB;KAAMD,W;;AAQb,MAAMK,eAAe,GAAIC,KAAD,KAAgB;AACpCL,EAAAA,eAAe,EAAE,CAAC,CAACK,KAAK,CAACC,IAAN,CAAWC;AADM,CAAhB,CAAxB;;AAIA,eAAeX,OAAO,CAACQ,eAAD,CAAP,CAAyBL,WAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport Header from \"../components/Header\";\n\ninterface route{\n    isAuthenticated:any,\n    component: any,\n    path:any\n}\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest }:route) => (<Route {...rest} element={\n        !isAuthenticated ? (<div><Component /></div>) : <Navigate to=\"/addCredential\" />\n    } />)\n\n\nconst mapStateToProps = (state:any) => ({\n    isAuthenticated: !!state.auth.uid\n})\n\nexport default connect(mapStateToProps)(PublicRoute);"]},"metadata":{},"sourceType":"module"}