{"ast":null,"code":"/* eslint linebreak-style: [\"error\", \"windows\"] */\nimport { WordArray } from './core/core.js';\nimport { SHA256Algo } from './sha256.js';\n/**\r\n * SHA-224 hash algorithm.\r\n */\n\nexport class SHA224Algo extends SHA256Algo {\n  _doReset() {\n    this._hash = new WordArray([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);\n  }\n\n  _doFinalize() {\n    const hash = super._doFinalize.call(this);\n\n    hash.sigBytes -= 4;\n    return hash;\n  }\n\n}\n/**\r\n * Shortcut function to the hasher's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n *\r\n * @return {WordArray} The hash.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hash = CryptoJS.SHA224('message');\r\n *     var hash = CryptoJS.SHA224(wordArray);\r\n */\n\nexport const SHA224 = SHA256Algo._createHelper(SHA224Algo);\n/**\r\n * Shortcut function to the HMAC's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n * @param {WordArray|string} key The secret key.\r\n *\r\n * @return {WordArray} The HMAC.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hmac = CryptoJS.HmacSHA224(message, key);\r\n */\n\nexport const HmacSHA224 = SHA256Algo._createHmacHelper(SHA224Algo);","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/node_modules/react-native-hash/JSHash/lib/sha224.js"],"names":["WordArray","SHA256Algo","SHA224Algo","_doReset","_hash","_doFinalize","hash","call","sigBytes","SHA224","_createHelper","HmacSHA224","_createHmacHelper"],"mappings":"AAAA;AAEA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,SAAyBD,UAAzB,CAAoC;AACzCE,EAAAA,QAAQ,GAAG;AACT,SAAKC,KAAL,GAAa,IAAIJ,SAAJ,CAAc,CACzB,UADyB,EAEzB,UAFyB,EAGzB,UAHyB,EAIzB,UAJyB,EAKzB,UALyB,EAMzB,UANyB,EAOzB,UAPyB,EAQzB,UARyB,CAAd,CAAb;AAUD;;AAEDK,EAAAA,WAAW,GAAG;AACZ,UAAMC,IAAI,GAAG,MAAMD,WAAN,CAAkBE,IAAlB,CAAuB,IAAvB,CAAb;;AAEAD,IAAAA,IAAI,CAACE,QAAL,IAAiB,CAAjB;AAEA,WAAOF,IAAP;AACD;;AApBwC;AAuB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,MAAM,GAAGR,UAAU,CAACS,aAAX,CAAyBR,UAAzB,CAAf;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,UAAU,GAAGV,UAAU,CAACW,iBAAX,CAA6BV,UAA7B,CAAnB","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n\r\nimport { WordArray } from './core/core.js';\r\nimport { SHA256Algo } from './sha256.js';\r\n\r\n/**\r\n * SHA-224 hash algorithm.\r\n */\r\nexport class SHA224Algo extends SHA256Algo {\r\n  _doReset() {\r\n    this._hash = new WordArray([\r\n      0xc1059ed8,\r\n      0x367cd507,\r\n      0x3070dd17,\r\n      0xf70e5939,\r\n      0xffc00b31,\r\n      0x68581511,\r\n      0x64f98fa7,\r\n      0xbefa4fa4,\r\n    ]);\r\n  }\r\n\r\n  _doFinalize() {\r\n    const hash = super._doFinalize.call(this);\r\n\r\n    hash.sigBytes -= 4;\r\n\r\n    return hash;\r\n  }\r\n}\r\n\r\n/**\r\n * Shortcut function to the hasher's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n *\r\n * @return {WordArray} The hash.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hash = CryptoJS.SHA224('message');\r\n *     var hash = CryptoJS.SHA224(wordArray);\r\n */\r\nexport const SHA224 = SHA256Algo._createHelper(SHA224Algo);\r\n\r\n/**\r\n * Shortcut function to the HMAC's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n * @param {WordArray|string} key The secret key.\r\n *\r\n * @return {WordArray} The HMAC.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hmac = CryptoJS.HmacSHA224(message, key);\r\n */\r\nexport const HmacSHA224 = SHA256Algo._createHmacHelper(SHA224Algo);\r\n"]},"metadata":{},"sourceType":"module"}