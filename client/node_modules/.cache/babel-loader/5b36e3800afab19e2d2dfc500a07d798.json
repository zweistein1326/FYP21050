{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Avatar, Button, Box, Container, Link, Grid, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { REGISTER } from '../graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [submitRegister, {\n    loading,\n    error\n  }] = useMutation(REGISTER);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangeHandler(result[0]);\n      });\n    } else {\n      setErrorMessage('Install Metamask');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    if (data.get('password') !== data.get('confirm-password')) {\n      setMessage('Password does not match');\n      return;\n    }\n\n    const payload = {\n      password: data.get('password')\n    };\n    submitRegister({\n      variables: {\n        input: payload\n      }\n    }).then(res => {\n      const {\n        status,\n        privateKey,\n        message\n      } = res.data.register;\n\n      if (status === 'success') {\n        localStorage.setItem('privateKey', privateKey);\n        navigate('/');\n      } else {\n        setMessage(message);\n      }\n    }).catch(err => {\n      console.error(err);\n      if (error) setMessage(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"red\",\n        sx: {\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Balance: \", userBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: loading,\n          children: connButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/login\",\n              variant: \"body2\",\n              children: 'Already have an account? Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"JpQ5i3CPOQuQyuTKfchqZBCxKX4=\", false, function () {\n  return [useNavigate, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Register.tsx"],"names":["useState","Avatar","Button","Box","Container","Link","Grid","Typography","LockOutlinedIcon","useMutation","useNavigate","REGISTER","Register","navigate","message","setMessage","submitRegister","loading","error","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","request","method","then","result","accountChangeHandler","handleSubmit","event","preventDefault","data","FormData","currentTarget","get","payload","password","variables","input","res","status","privateKey","register","localStorage","setItem","catch","err","console","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","mb"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  Box,\n  Checkbox,\n  Container,\n  TextField,\n  FormControlLabel,\n  Link,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { REGISTER } from '../graphql';\n\ndeclare var window: any;\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [message, setMessage] = useState<string>('');\n  const [submitRegister, { loading, error }] = useMutation(REGISTER);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  \n\n  const connectWalletHandler = () => {\n    if(window.ethereum){\n      window.ethereum.request({method:'eth_requestAccounts'}).then(result=>{\n        accountChangeHandler(result[0])\n;      })\n    }\n    else{\n      setErrorMessage('Install Metamask');\n    }\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    if (data.get('password') !== data.get('confirm-password')) {\n      setMessage('Password does not match');\n      return;\n    }\n\n    const payload = {\n      password: data.get('password'),\n    };\n\n    submitRegister({\n      variables: {\n        input: payload,\n      },\n    })\n      .then((res) => {\n        const { status, privateKey, message } = res.data.register;\n        if (status === 'success') {\n          localStorage.setItem('privateKey', privateKey);\n          navigate('/');\n        } else {\n          setMessage(message);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        if (error) setMessage(error.message);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        {message && (\n          <Typography variant=\"body1\" color=\"red\" sx={{ mt: 2 }}>\n            {message}\n          </Typography>\n        )}\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          {/* <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirm-password\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"confirm-password\"\n            autoComplete=\"current-password\"\n          /> */}\n          <Typography>Address: {defaultAccount}</Typography>\n          <Typography>Balance: {userBalance}</Typography>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            {connButtonText}\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {'Already have an account? Login'}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}