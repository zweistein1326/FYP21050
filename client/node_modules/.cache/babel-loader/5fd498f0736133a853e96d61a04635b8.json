{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/projects/FYP21050/client/src/pages/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Button, Box, Container, Typography } from '@mui/material';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { REGISTER } from '../graphql';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [submitRegister, {\n    loading,\n    error\n  }] = useMutation(REGISTER);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [file, setFile] = useState(null);\n\n  const connectWalletHandler = event => {\n    event.preventDefault();\n\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(async result => {\n        await accountChangeHandler(result[0]);\n      }).then(() => {});\n    } else {\n      setErrorMessage('Install Metamask');\n    }\n  };\n\n  const accountChangeHandler = async newAccount => {\n    setDefaultAccount(newAccount);\n    getUserBalance(newAccount);\n    setConnButtonText('Disconnect Wallet');\n  };\n\n  const getUserBalance = address => {\n    window.ethereum.request({\n      method: 'eth_getBalance',\n      params: [address, 'latest']\n    }).then(balance => {\n      console.log(balance);\n      setUserBalance(ethers.utils.formatEther(balance));\n    });\n  };\n\n  const onFileUpload = event => {\n    event.preventDefault();\n    setFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n  };\n\n  const handleSubmitFile = event => {\n    event.preventDefault();\n    console.log('submitting');\n    var bodyFormData = new FormData();\n\n    if (file !== null) {\n      bodyFormData.append(file.name, file);\n    }\n\n    console.log(bodyFormData);\n  }; // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   const data = new FormData(event.currentTarget);\n  //   if (data.get('password') !== data.get('confirm-password')) {\n  //     setMessage('Password does not match');\n  //     return;\n  //   }\n  //   const payload = {\n  //     password: data.get('password'),\n  //   };\n  //   submitRegister({\n  //     variables: {\n  //       input: payload,\n  //     },\n  //   })\n  //     .then((res) => {\n  //       const { status, privateKey, message } = res.data.register;\n  //       if (status === 'success') {\n  //         localStorage.setItem('privateKey', privateKey);\n  //         navigate('/');\n  //       } else {\n  //         setMessage(message);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //       if (error) setMessage(error.message);\n  //     });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: connectWalletHandler,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Balance: \", userBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: loading,\n          children: connButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmitFile,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Upload New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          placeholder: \"upload file\",\n          onChange: onFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: loading,\n          children: \"Submit File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Your uploaded files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"8akaTp16wD7uu4qsx3X5gaYC6r4=\", false, function () {\n  return [useNavigate, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/sid/Desktop/projects/FYP21050/client/src/pages/Register.tsx"],"names":["useState","Button","Box","Container","Typography","useMutation","useNavigate","REGISTER","ethers","Register","navigate","message","setMessage","submitRegister","loading","error","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","file","setFile","connectWalletHandler","event","preventDefault","window","ethereum","request","method","then","result","accountChangeHandler","newAccount","getUserBalance","address","params","balance","console","log","utils","formatEther","onFileUpload","target","files","handleSubmitFile","bodyFormData","FormData","append","name","marginTop","display","flexDirection","alignItems","mt","mb"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  Box,\n  Checkbox,\n  Container,\n  TextField,\n  FormControlLabel,\n  Link,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { REGISTER } from '../graphql';\nimport { ethers } from 'ethers';\n\ndeclare var window: any;\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [message, setMessage] = useState<string>('');\n  const [submitRegister, { loading, error }] = useMutation(REGISTER);\n  const [errorMessage, setErrorMessage] = useState<any>(null);\n  const [defaultAccount, setDefaultAccount] = useState<any>(null);\n  const [userBalance, setUserBalance] = useState<any>(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [file,setFile] = useState<File | null>(null);\n\n  const connectWalletHandler = (event:any) => {\n    event.preventDefault()\n    if(window.ethereum){\n      window.ethereum.request({method:'eth_requestAccounts'}).then(async (result:any[]) => {\n        await accountChangeHandler(result[0]);\n      }).then(()=>{\n      });\n    }\n    else{\n      setErrorMessage('Install Metamask');\n    }\n  }\n\n  const accountChangeHandler = async(newAccount:any) => {\n    setDefaultAccount(newAccount);\n    getUserBalance(newAccount);\n    setConnButtonText('Disconnect Wallet');\n  }\n\n  const getUserBalance = (address:any) =>{\n    window.ethereum.request({method:'eth_getBalance', params:[address,'latest']}).then((balance:any)=>{\n      console.log(balance);\n      setUserBalance(ethers.utils.formatEther(balance));\n    })\n  }\n\n  const onFileUpload = (event:any) => {\n    event.preventDefault();\n    setFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n  }\n\n  const handleSubmitFile = (event:any) => {\n    event.preventDefault();\n    console.log('submitting');\n    var bodyFormData = new FormData();\n    if(file!==null){\n       bodyFormData.append(file.name,file);\n      }\n      console.log(bodyFormData)\n  } \n\n  // const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   const data = new FormData(event.currentTarget);\n\n  //   if (data.get('password') !== data.get('confirm-password')) {\n  //     setMessage('Password does not match');\n  //     return;\n  //   }\n\n  //   const payload = {\n  //     password: data.get('password'),\n  //   };\n\n  //   submitRegister({\n  //     variables: {\n  //       input: payload,\n  //     },\n  //   })\n  //     .then((res) => {\n  //       const { status, privateKey, message } = res.data.register;\n  //       if (status === 'success') {\n  //         localStorage.setItem('privateKey', privateKey);\n  //         navigate('/');\n  //       } else {\n  //         setMessage(message);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.error(err);\n  //       if (error) setMessage(error.message);\n  //     });\n  // };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        {/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        {message && (\n          <Typography variant=\"body1\" color=\"red\" sx={{ mt: 2 }}>\n            {message}\n          </Typography>\n        )} */}\n        <Box component=\"form\" onSubmit={connectWalletHandler} noValidate sx={{ mt: 1 }}>\n          {/* <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirm-password\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"confirm-password\"\n            autoComplete=\"current-password\"\n          /> */}\n          <Typography>Address: {defaultAccount}</Typography>\n          <Typography>Balance: {userBalance}</Typography>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            {connButtonText}\n          </Button>\n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {'Already have an account? Login'}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </Box>\n        <Box component=\"form\" onSubmit={handleSubmitFile} noValidate sx={{ mt: 1 }}>\n          <Typography>Upload New File</Typography>\n          <input type=\"file\" name=\"file\" placeholder='upload file' onChange={onFileUpload}/>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            Submit File\n          </Button>\n\n          <Typography>Your uploaded files</Typography>\n          <Typography>1</Typography>\n          <Typography>2</Typography>\n          <Typography>3</Typography>\n          <Typography>4</Typography>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}