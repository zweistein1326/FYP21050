{"ast":null,"code":"/* eslint linebreak-style: [\"error\", \"windows\"] */\n\n/* eslint-disable no-use-before-define */\nimport WordArray from './WordArray.js';\n/**\r\n * Hex encoding strategy.\r\n */\n\nconst Hex = {\n  /**\r\n     * Converts a word array to a hex string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The hex string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n     */\n  stringify(wordArray) {\n    // Shortcuts\n    const {\n      words,\n      sigBytes\n    } = wordArray; // Convert\n\n    const hexChars = [];\n\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\r\n     * Converts a hex string to a word array.\r\n     *\r\n     * @param {string} hexStr The hex string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n     */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length; // Convert\n\n    const words = [];\n\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  }\n\n};\nexport default Hex;","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/node_modules/react-native-hash/JSHash/lib/core/Hex.js"],"names":["WordArray","Hex","stringify","wordArray","words","sigBytes","hexChars","i","bite","push","toString","join","parse","hexStr","hexStrLength","length","parseInt","substr"],"mappings":"AAAA;;AACA;AAEA,OAAOA,SAAP,MAAsB,gBAAtB;AAGA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG;AACV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,SAAS,CAACC,SAAD,EAAY;AACnB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,SAA5B,CAFmB,CAInB;;AACA,UAAMG,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,IAAI,CAAnC,EAAsC;AACpC,YAAMC,IAAI,GAAIJ,KAAK,CAACG,CAAC,KAAK,CAAP,CAAL,KAAoB,KAAMA,CAAC,GAAG,CAAL,GAAU,CAApC,GAA0C,IAAvD;AACAD,MAAAA,QAAQ,CAACG,IAAT,CAAc,CAACD,IAAI,KAAK,CAAV,EAAaE,QAAb,CAAsB,EAAtB,CAAd;AACAJ,MAAAA,QAAQ,CAACG,IAAT,CAAc,CAACD,IAAI,GAAG,IAAR,EAAcE,QAAd,CAAuB,EAAvB,CAAd;AACD;;AAED,WAAOJ,QAAQ,CAACK,IAAT,CAAc,EAAd,CAAP;AACD,GA3BS;;AA6BV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,CAACC,MAAD,EAAS;AACZ;AACA,UAAMC,YAAY,GAAGD,MAAM,CAACE,MAA5B,CAFY,CAIZ;;AACA,UAAMX,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,YAApB,EAAkCP,CAAC,IAAI,CAAvC,EAA0C;AACxCH,MAAAA,KAAK,CAACG,CAAC,KAAK,CAAP,CAAL,IAAkBS,QAAQ,CAACH,MAAM,CAACI,MAAP,CAAcV,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAR,IAAsC,KAAMA,CAAC,GAAG,CAAL,GAAU,CAAvE;AACD;;AAED,WAAO,IAAIP,SAAJ,CAAcI,KAAd,EAAqBU,YAAY,GAAG,CAApC,CAAP;AACD;;AArDS,CAAZ;AAwDA,eAAeb,GAAf","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n/* eslint-disable no-use-before-define */\r\n\r\nimport WordArray from './WordArray.js';\r\n\r\n\r\n/**\r\n * Hex encoding strategy.\r\n */\r\n\r\nconst Hex = {\r\n  /**\r\n     * Converts a word array to a hex string.\r\n     *\r\n     * @param {WordArray} wordArray The word array.\r\n     *\r\n     * @return {string} The hex string.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n     */\r\n  stringify(wordArray) {\r\n    // Shortcuts\r\n    const { words, sigBytes } = wordArray;\r\n\r\n    // Convert\r\n    const hexChars = [];\r\n    for (let i = 0; i < sigBytes; i += 1) {\r\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n      hexChars.push((bite >>> 4).toString(16));\r\n      hexChars.push((bite & 0x0f).toString(16));\r\n    }\r\n\r\n    return hexChars.join('');\r\n  },\r\n\r\n  /**\r\n     * Converts a hex string to a word array.\r\n     *\r\n     * @param {string} hexStr The hex string.\r\n     *\r\n     * @return {WordArray} The word array.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n     */\r\n  parse(hexStr) {\r\n    // Shortcut\r\n    const hexStrLength = hexStr.length;\r\n\r\n    // Convert\r\n    const words = [];\r\n    for (let i = 0; i < hexStrLength; i += 2) {\r\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n    }\r\n\r\n    return new WordArray(words, hexStrLength / 2);\r\n  },\r\n};\r\n\r\nexport default Hex;\r\n"]},"metadata":{},"sourceType":"module"}