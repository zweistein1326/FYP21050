{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from '@apollo/client';\nimport { Box, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CredentialTile from '../components/CredentialTile';\nimport Header from '../components/Header';\nimport { GETUSERBYID } from '../graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(props.auth.user !== null);\n  const [activeUser, setActiveUser] = useState({});\n  const [fetchInfo, {\n    loading,\n    error\n  }] = useMutation(GETUSERBYID);\n  const [account, setAccount] = useState(null);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n\n  const {\n    id\n  } = useParams();\n  const {\n    ethereum\n  } = window;\n\n  const connectWalletHandler = async () => {\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getUserInfo = async () => {\n    await connectWalletHandler();\n    fetchInfo({\n      variables: {\n        id\n      }\n    }).then(res => {\n      let user = res.data.getUserById.user;\n      setActiveUser(user);\n    });\n  };\n\n  useEffect(() => {\n    getUserInfo();\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [\"User information\", /*#__PURE__*/_jsxDEV(Header, {\n        setLoggedIn: setLoggedIn,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: loggedIn && props.auth.user ? '' : 'Not logged-in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Metamask account address: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"DID: \", activeUser.id, \" (@\", activeUser.username, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Name: \", activeUser.firstname, \" \", activeUser.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Email: \", activeUser.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), activeUser.id == props.auth.user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Your saved credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Update user information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true) : null, activeUser.credentials ? Object.values(activeUser.credentials).map((credential, index) => /*#__PURE__*/_jsxDEV(CredentialTile, {\n          credential: credential,\n          title: Object.keys(activeUser.credentials)[index]\n        }, credential.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 82\n        }, this)) // <Link to={`${activeUser.degreeCertificate.digest}`}><Typography>Degree Certificate</Typography></Link>\n        : '']\n      }, void 0, true) : null]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"9TNwu6T9xuWyEIy4LLJSr/YAcio=\", false, function () {\n  return [useMutation, useParams];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Home.tsx"],"names":["useMutation","Box","Typography","useEffect","useState","connect","useParams","CredentialTile","Header","GETUSERBYID","Home","props","loggedIn","setLoggedIn","auth","user","activeUser","setActiveUser","fetchInfo","loading","error","account","setAccount","handleLogout","localStorage","removeItem","id","ethereum","window","connectWalletHandler","accounts","request","method","err","console","log","getUserInfo","variables","then","res","data","getUserById","username","firstname","lastname","email","credentials","Object","values","map","credential","index","keys","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { Box, Button, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport CredentialTile from '../components/CredentialTile';\nimport Header from '../components/Header';\nimport { GETUSERBYID } from '../graphql';\nimport { User } from '../models/User';\ndeclare var window:any;\n\nconst Home = (props:any) => {\n  const [loggedIn, setLoggedIn] = useState(\n    props.auth.user !==null ,\n  );\n  const [activeUser,setActiveUser] = useState<any>({});\n  const [fetchInfo,{loading,error}] = useMutation(GETUSERBYID);\n  const [account, setAccount] = useState<any>(null);\n  \n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n  \n  const {id} = useParams();\n\n  const {ethereum} = window;\n\n  const connectWalletHandler = async () => {\n    try{\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      setAccount(accounts[0]);\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  const getUserInfo = async () =>{\n    await connectWalletHandler();\n    fetchInfo({\n      variables: {\n        id\n    },\n  })\n    .then((res)=>{\n      let user:User = res.data.getUserById.user;\n      setActiveUser(user);\n    })\n  }\n\n  useEffect(()=>{getUserInfo();})\n\n  return (\n    <Box>\n    <Box >\n    User information\n      <Header setLoggedIn={setLoggedIn} loggedIn={loggedIn}/>\n    </Box>\n    <>\n    {/* <Typography variant=\"h2\">Home Page</Typography> */}\n      <Typography>\n        {loggedIn && props.auth.user ? '' : 'Not logged-in'} \n      </Typography>\n      {loggedIn ?\n      <>\n        <Typography>\n          Metamask account address: {account}\n        </Typography>\n        <Typography>\n          DID: {activeUser.id} (@{activeUser.username})\n        </Typography>\n        <Typography>\n          Name: {activeUser.firstname} {activeUser.lastname}\n        </Typography>\n        <Typography>\n          Email: {activeUser.email}\n        </Typography>\n        \n        {activeUser.id == props.auth.user.id?\n        <>\n        <Typography>\n          Your saved credentials\n        </Typography>\n        <Typography>\n          Update user information\n        </Typography>\n        </>:\n        null}\n        {activeUser.credentials ?\n        Object.values(activeUser.credentials).map((credential:any,index:number)=><CredentialTile key={credential.id} credential={credential} title={Object.keys(activeUser.credentials)[index]} />)\n          // <Link to={`${activeUser.degreeCertificate.digest}`}><Typography>Degree Certificate</Typography></Link>\n        :''}\n      </>: null}\n    </>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state:any) => ({\n  auth:state.auth\n})\n\nexport default connect(mapStateToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}