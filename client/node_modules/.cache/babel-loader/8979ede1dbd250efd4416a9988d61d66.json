{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/components/CredentialTile.tsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport { Alert, Box, Button, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHANGEPENDINGSTATUS, CHANGESTATUS } from \"../graphql\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CredentialTile = props => {\n  _s();\n\n  const {\n    credential,\n    title\n  } = props;\n  const [changeCredentialPendingStatus, {\n    loading,\n    error\n  }] = useMutation(CHANGEPENDINGSTATUS);\n  const [changeCredentialStatus, {\n    loading: loading2,\n    error: error2\n  }] = useMutation(CHANGESTATUS);\n\n  const getCredentialInfo = () => {// find info for credentialx\n  };\n\n  const acceptCredential = () => {\n    Alert();\n    changeCredentialPendingStatus({\n      variables: {\n        input: {\n          id: title,\n          ownerId: props.auth.user.id\n        }\n      }\n    }).then(res => {\n      const {\n        status\n      } = res.data.changeCredentialPendingStatus;\n      console.log(status);\n    });\n  };\n\n  const revokeCredential = () => {\n    // delink credential from user's account\n    changeCredentialStatus({\n      variables: {\n        input: {\n          id: title,\n          ownerId: props.auth.user.id\n        }\n      }\n    }).then(res => {\n      const {\n        status\n      } = res.data.changeCredentialStatus;\n      console.log(status);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 3,\n      mb: 2,\n      border: '1px solid grey',\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `${title}`,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: credential.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), credential.pending ? /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: acceptCredential,\n        color: \"success\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: revokeCredential,\n        color: \"error\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: revokeCredential,\n      color: \"warning\",\n      variant: \"contained\",\n      sx: {\n        mt: 3,\n        mb: 2\n      },\n      children: \"Revoke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CredentialTile, \"eJarmmMJyrFrSLSaft7cA2kI9u8=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = CredentialTile;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(CredentialTile);\n\nvar _c;\n\n$RefreshReg$(_c, \"CredentialTile\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/components/CredentialTile.tsx"],"names":["connect","Alert","Box","Button","Typography","Link","useMutation","CHANGEPENDINGSTATUS","CHANGESTATUS","CredentialTile","props","credential","title","changeCredentialPendingStatus","loading","error","changeCredentialStatus","loading2","error2","getCredentialInfo","acceptCredential","variables","input","id","ownerId","auth","user","then","res","status","data","console","log","revokeCredential","mt","mb","border","p","pending","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { connect } from \"react-redux\"\nimport { Alert, Box, Button, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CHANGEPENDINGSTATUS, CHANGESTATUS } from \"../graphql\";\n\nconst CredentialTile = (props:any) => {\n    const {credential,title} = props;\n    const [changeCredentialPendingStatus,{loading,error}] = useMutation(CHANGEPENDINGSTATUS);\n    const [changeCredentialStatus,{loading:loading2,error:error2}] = useMutation(CHANGESTATUS);\n\n    const getCredentialInfo = ()=>{\n        // find info for credentialx\n    }\n\n     const acceptCredential=()=>{\n        Alert()\n        changeCredentialPendingStatus({\n            variables:{\n                input: {\n                    id:title,\n                    ownerId: props.auth.user.id\n                }\n            }\n        }).then((res)=>{\n            const {status} = res.data.changeCredentialPendingStatus;\n            console.log(status);\n        })\n    }\n\n    const revokeCredential = ()=>{\n        // delink credential from user's account\n        changeCredentialStatus({\n            variables:{\n                input: {\n                    id:title,\n                    ownerId: props.auth.user.id\n                }\n            }\n        }).then((res)=>{\n            const {status} = res.data.changeCredentialStatus;\n            console.log(status);\n        })\n    }\n\n    return(\n        <Box sx={{ mt:3, mb:2, border:'1px solid grey', p:2 }}>\n            <Link to={`${title}`}><Typography variant=\"h6\">{credential.title}</Typography></Link>\n            {credential.pending ?\n            <Box>\n            <Button \n            onClick={acceptCredential} \n            color=\"success\" \n            variant=\"contained\" \n            sx={{ mt:3, mb:2 }}>\n                Accept\n            </Button>\n            <Button onClick={revokeCredential}\n            color=\"error\"\n            variant=\"contained\"\n            sx={{ mt:3, mb:2 }}>\n                Reject\n            </Button>\n            </Box> \n            :\n            <Button onClick={revokeCredential}\n            color=\"warning\"\n            variant=\"contained\"\n            sx={{ mt:3, mb:2 }}>\n                Revoke\n            </Button>}\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state:any) => ({\n    auth:state.auth\n})\nexport default connect(mapStateToProps)(CredentialTile);"]},"metadata":{},"sourceType":"module"}