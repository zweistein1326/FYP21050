{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/AddCredential.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from \"@apollo/client\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SUBMITCREDENTIAL } from \"../graphql\";\nimport 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst privateKey = 'MIICXAIBAAKBgQDLyT/Ah5gtJu74KRpNatZgFzdePXdRYLvknjBCqanlhzkfE4NwUIVGK1/lumyZVuA1zBXvDrXXRm4tuDod8ROQYEPOw25A+9Eq6UGBRUOO1/zWkpumPiJtIgLFDbto98VfD0ooISc0GLHm5dBidxri5IHUT8Wl+gTeIqRJDYI9nwIDAQABAoGAQshH6StGdn2M0Kx/nyFE8aaKEYspH/UIfipM/HunXr3KvWFisJriohUyzxEh57ptrZOdGIOEmfDNyJPYD9niI9d8ETiC0qHfMUblxNG5McC8ATLARp0bKXJ7XT4dJJQ15/yltrH+KxIVZ7fEoMHXHxXYp3AYVrjaaupZzXK1WBkCQQDpLGSK+624L0DPhyuTNLfWMHCaOGEaVDGGese+fhZ3KKNk3HhaWyqX2t3EALFqp3R2pCnyjT8I7sNYiAct/XZbAkEA37xgJDUUZO0mZr2dtWtOtK5BDsqM2Cpp1iSL5kggDcuuuepvNfxh/goEyo4FAXBC+GBQcdgXx9GOmrV/7tyhDQJBAMspoNjv/Sb0FRY9Ahya3GrFffcBlKmqHhS8OfmiRtTAFc21wy+HK49wZbV3nR3+lZ0h4GKz6u5PiulCbG8H3u0CQGDMHURM+q/Xsl+M9eiBrqGZKmh91YXIg9W0JhrRZZzSXJvvA4J12OeR6hTAcQX4TeErumImvdMjpPDmSZ1MMxkCQGMB7L+HemusnZP6JvBYyUwlkvSDoqkRUABW74cCu5dsHDBOVnAtBbyXGH1JgCSkqLtk+1ZKgH7I8M9VL7zs66s='; // import private key from local storage\n\nconst AddCredential = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [submitCredential, {\n    loading,\n    error\n  }] = useMutation(SUBMITCREDENTIAL);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    let tempPayload = {\n      title: data.get('credential_title'),\n      value: data.get('credential_value'),\n      issuerId: props.auth.user.id,\n      receiverId: data.get('receiver_id')\n    }; // generate hash\n    // sign hash\n    // const jsEncrypt = new JSEncrypt();\n    // jsEncrypt.setPublicKey(privateKey);\n    // const signature = jsEncrypt.sign(JSON.stringify(tempPayload),CryptoJS.SHA256,\"sha256\");\n    // console.log(signature);\n    // let payload = {...tempPayload, hash, signature}\n\n    submitCredential({\n      variables: {\n        input: payload\n      }\n    }).then(res => {\n      const {\n        status,\n        credential,\n        message\n      } = res.data.login;\n\n      if (status === \"success\") {\n        console.log(credential);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Create new credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      sx: {\n        mt: 1\n      },\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"title\",\n        label: \"Credential title\",\n        name: \"credential_title\",\n        autoComplete: \"text\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), \"Select credential type: Text, Image, JSON, Video, Smart Contract,\", /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"value\",\n        label: \"Credential value\",\n        name: \"credential_value\",\n        autoComplete: \"text\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"receiver_id\",\n        label: \"Receiver Id\",\n        name: \"receiver_id\",\n        autoComplete: \"text\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        disabled: loading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCredential, \"FVolzwjqZCdLeAFGbmD1vpg3r3Y=\", false, function () {\n  return [useNavigate, useMutation];\n});\n\n_c = AddCredential;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(AddCredential);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCredential\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/AddCredential.tsx"],"names":["useMutation","Box","Button","TextField","Typography","connect","useNavigate","SUBMITCREDENTIAL","privateKey","AddCredential","props","navigate","submitCredential","loading","error","handleSubmit","event","preventDefault","data","FormData","currentTarget","tempPayload","title","get","value","issuerId","auth","user","id","receiverId","variables","input","payload","then","res","status","credential","message","login","console","log","mt","mb","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport { Box, Button, FormControl, FormHelperText, Input, InputLabel, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SUBMITCREDENTIAL } from \"../graphql\";\nimport {} from 'crypto-js';\n\nconst privateKey = 'MIICXAIBAAKBgQDLyT/Ah5gtJu74KRpNatZgFzdePXdRYLvknjBCqanlhzkfE4NwUIVGK1/lumyZVuA1zBXvDrXXRm4tuDod8ROQYEPOw25A+9Eq6UGBRUOO1/zWkpumPiJtIgLFDbto98VfD0ooISc0GLHm5dBidxri5IHUT8Wl+gTeIqRJDYI9nwIDAQABAoGAQshH6StGdn2M0Kx/nyFE8aaKEYspH/UIfipM/HunXr3KvWFisJriohUyzxEh57ptrZOdGIOEmfDNyJPYD9niI9d8ETiC0qHfMUblxNG5McC8ATLARp0bKXJ7XT4dJJQ15/yltrH+KxIVZ7fEoMHXHxXYp3AYVrjaaupZzXK1WBkCQQDpLGSK+624L0DPhyuTNLfWMHCaOGEaVDGGese+fhZ3KKNk3HhaWyqX2t3EALFqp3R2pCnyjT8I7sNYiAct/XZbAkEA37xgJDUUZO0mZr2dtWtOtK5BDsqM2Cpp1iSL5kggDcuuuepvNfxh/goEyo4FAXBC+GBQcdgXx9GOmrV/7tyhDQJBAMspoNjv/Sb0FRY9Ahya3GrFffcBlKmqHhS8OfmiRtTAFc21wy+HK49wZbV3nR3+lZ0h4GKz6u5PiulCbG8H3u0CQGDMHURM+q/Xsl+M9eiBrqGZKmh91YXIg9W0JhrRZZzSXJvvA4J12OeR6hTAcQX4TeErumImvdMjpPDmSZ1MMxkCQGMB7L+HemusnZP6JvBYyUwlkvSDoqkRUABW74cCu5dsHDBOVnAtBbyXGH1JgCSkqLtk+1ZKgH7I8M9VL7zs66s='\n// import private key from local storage\n\nconst AddCredential = (props:any) => {\n\n    const navigate = useNavigate();\n    const [submitCredential,{loading,error}] = useMutation(SUBMITCREDENTIAL);\n\n\n    const handleSubmit = async(event: React.FormEvent<HTMLFormElement>)=>{\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n\n        let tempPayload = {\n            title: data.get('credential_title'),\n            value: data.get('credential_value'),\n            issuerId: props.auth.user.id,\n            receiverId: data.get('receiver_id')\n        }\n\n        // generate hash\n        // sign hash\n        // const jsEncrypt = new JSEncrypt();\n        // jsEncrypt.setPublicKey(privateKey);\n        // const signature = jsEncrypt.sign(JSON.stringify(tempPayload),CryptoJS.SHA256,\"sha256\");\n        // console.log(signature);\n\n        // let payload = {...tempPayload, hash, signature}\n\n        submitCredential({\n            variables:{\n                input:payload\n            }\n        }).then((res)=>{\n            const {status, credential, message} = res.data.login;\n            if(status===\"success\"){\n                console.log(credential);\n            }\n        })\n    }\n    return (\n        <Box>\n            <Typography>Create new credential</Typography>\n            <Box component=\"form\" noValidate sx={{ mt: 1 }} onSubmit={handleSubmit}>\n                <TextField\n                margin =\"normal\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Credential title\"\n                name=\"credential_title\"\n                autoComplete=\"text\"\n                autoFocus/>\n                Select credential type: Text, Image, JSON, Video, Smart Contract, \n                <TextField\n                margin =\"normal\"\n                required\n                fullWidth\n                id=\"value\"\n                label=\"Credential value\"\n                name=\"credential_value\"\n                autoComplete=\"text\"\n                autoFocus/>\n                <TextField\n                margin =\"normal\"\n                required\n                fullWidth\n                id=\"receiver_id\"\n                label=\"Receiver Id\"\n                name=\"receiver_id\"\n                autoComplete=\"text\"\n                autoFocus/>\n                <Button \n                type=\"submit\" \n                variant=\"contained\" \n                sx = {{ mt:3, mb:2 }}\n                disabled={loading}\n                >\n                    Submit\n                </Button>\n            </Box>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state:any)=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(AddCredential);"]},"metadata":{},"sourceType":"module"}