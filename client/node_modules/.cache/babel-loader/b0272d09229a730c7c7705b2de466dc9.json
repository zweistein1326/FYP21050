{"ast":null,"code":"/* eslint linebreak-style: [\"error\", \"windows\"] */\nimport { X64Word, X64WordArray } from './core/core.js';\nimport { SHA512Algo } from './sha512.js';\n/**\r\n * SHA-384 hash algorithm.\r\n */\n\nexport class SHA384Algo extends SHA512Algo {\n  _doReset() {\n    this._hash = new X64WordArray([new X64Word(0xcbbb9d5d, 0xc1059ed8), new X64Word(0x629a292a, 0x367cd507), new X64Word(0x9159015a, 0x3070dd17), new X64Word(0x152fecd8, 0xf70e5939), new X64Word(0x67332667, 0xffc00b31), new X64Word(0x8eb44a87, 0x68581511), new X64Word(0xdb0c2e0d, 0x64f98fa7), new X64Word(0x47b5481d, 0xbefa4fa4)]);\n  }\n\n  _doFinalize() {\n    const hash = super._doFinalize.call(this);\n\n    hash.sigBytes -= 16;\n    return hash;\n  }\n\n}\n/**\r\n * Shortcut function to the hasher's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n *\r\n * @return {WordArray} The hash.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hash = CryptoJS.SHA384('message');\r\n *     var hash = CryptoJS.SHA384(wordArray);\r\n */\n\nexport const SHA384 = SHA512Algo._createHelper(SHA384Algo);\n/**\r\n * Shortcut function to the HMAC's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n * @param {WordArray|string} key The secret key.\r\n *\r\n * @return {WordArray} The HMAC.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hmac = CryptoJS.HmacSHA384(message, key);\r\n */\n\nexport const HmacSHA384 = SHA512Algo._createHmacHelper(SHA384Algo);","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/node_modules/react-native-hash/JSHash/lib/sha384.js"],"names":["X64Word","X64WordArray","SHA512Algo","SHA384Algo","_doReset","_hash","_doFinalize","hash","call","sigBytes","SHA384","_createHelper","HmacSHA384","_createHmacHelper"],"mappings":"AAAA;AAEA,SACEA,OADF,EAEEC,YAFF,QAGO,gBAHP;AAIA,SAASC,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,SAAyBD,UAAzB,CAAoC;AACzCE,EAAAA,QAAQ,GAAG;AACT,SAAKC,KAAL,GAAa,IAAIJ,YAAJ,CAAiB,CAC5B,IAAID,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAD4B,EAE5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAF4B,EAG5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAH4B,EAI5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAJ4B,EAK5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAL4B,EAM5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAN4B,EAO5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAP4B,EAQ5B,IAAIA,OAAJ,CAAY,UAAZ,EAAwB,UAAxB,CAR4B,CAAjB,CAAb;AAUD;;AAEDM,EAAAA,WAAW,GAAG;AACZ,UAAMC,IAAI,GAAG,MAAMD,WAAN,CAAkBE,IAAlB,CAAuB,IAAvB,CAAb;;AAEAD,IAAAA,IAAI,CAACE,QAAL,IAAiB,EAAjB;AAEA,WAAOF,IAAP;AACD;;AApBwC;AAuB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,MAAM,GAAGR,UAAU,CAACS,aAAX,CAAyBR,UAAzB,CAAf;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,UAAU,GAAGV,UAAU,CAACW,iBAAX,CAA6BV,UAA7B,CAAnB","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n\r\nimport {\r\n  X64Word,\r\n  X64WordArray,\r\n} from './core/core.js';\r\nimport { SHA512Algo } from './sha512.js';\r\n\r\n/**\r\n * SHA-384 hash algorithm.\r\n */\r\nexport class SHA384Algo extends SHA512Algo {\r\n  _doReset() {\r\n    this._hash = new X64WordArray([\r\n      new X64Word(0xcbbb9d5d, 0xc1059ed8),\r\n      new X64Word(0x629a292a, 0x367cd507),\r\n      new X64Word(0x9159015a, 0x3070dd17),\r\n      new X64Word(0x152fecd8, 0xf70e5939),\r\n      new X64Word(0x67332667, 0xffc00b31),\r\n      new X64Word(0x8eb44a87, 0x68581511),\r\n      new X64Word(0xdb0c2e0d, 0x64f98fa7),\r\n      new X64Word(0x47b5481d, 0xbefa4fa4),\r\n    ]);\r\n  }\r\n\r\n  _doFinalize() {\r\n    const hash = super._doFinalize.call(this);\r\n\r\n    hash.sigBytes -= 16;\r\n\r\n    return hash;\r\n  }\r\n}\r\n\r\n/**\r\n * Shortcut function to the hasher's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n *\r\n * @return {WordArray} The hash.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hash = CryptoJS.SHA384('message');\r\n *     var hash = CryptoJS.SHA384(wordArray);\r\n */\r\nexport const SHA384 = SHA512Algo._createHelper(SHA384Algo);\r\n\r\n/**\r\n * Shortcut function to the HMAC's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n * @param {WordArray|string} key The secret key.\r\n *\r\n * @return {WordArray} The HMAC.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hmac = CryptoJS.HmacSHA384(message, key);\r\n */\r\nexport const HmacSHA384 = SHA512Algo._createHmacHelper(SHA384Algo);\r\n"]},"metadata":{},"sourceType":"module"}