{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Avatar, Button, Box, Checkbox, Container, TextField, FormControlLabel, Link, Grid, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { REGISTER } from '../graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [submitRegister, {\n    loading,\n    error\n  }] = useMutation(REGISTER);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    if (data.get('password') !== data.get('confirm-password')) {\n      setMessage('Password does not match');\n      return;\n    }\n\n    const payload = {\n      username: data.get('username'),\n      email: data.get('email'),\n      password: data.get('password')\n    };\n    submitRegister({\n      variables: {\n        input: payload\n      }\n    }).then(res => {\n      const {\n        status,\n        token,\n        message\n      } = res.data.register;\n\n      if (status === 'success') {\n        localStorage.setItem('token', token);\n        navigate('/');\n      } else {\n        setMessage(message);\n      }\n    }).catch(err => {\n      console.error(err);\n      if (error) setMessage(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"red\",\n        sx: {\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          label: \"User Name\",\n          name: \"username\",\n          autoComplete: \"username\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirm-password\",\n          label: \"Confirm Password\",\n          type: \"password\",\n          id: \"confirm-password\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 22\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          disabled: loading,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              variant: \"body2\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/login\",\n              variant: \"body2\",\n              children: 'Already have an account? Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"/LQWJe4LVliE9GpXpCXTeMRBnGg=\", false, function () {\n  return [useNavigate, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Register.tsx"],"names":["useState","Avatar","Button","Box","Checkbox","Container","TextField","FormControlLabel","Link","Grid","Typography","LockOutlinedIcon","useMutation","useNavigate","REGISTER","Register","navigate","message","setMessage","submitRegister","loading","error","handleSubmit","event","preventDefault","data","FormData","currentTarget","get","payload","username","email","password","variables","input","then","res","status","token","register","localStorage","setItem","catch","err","console","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","mb"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  Box,\n  Checkbox,\n  Container,\n  TextField,\n  FormControlLabel,\n  Link,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { REGISTER } from '../graphql';\nimport { generateKeyPair } from 'crypto';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [message, setMessage] = useState<string>('');\n  const [submitRegister, { loading, error }] = useMutation(REGISTER);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    if (data.get('password') !== data.get('confirm-password')) {\n      setMessage('Password does not match');\n      return;\n    }\n\n    const payload = {\n      username: data.get('username'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    submitRegister({\n      variables: {\n        input: payload,\n      },\n    })\n      .then((res) => {\n        const { status, token, message } = res.data.register;\n        if (status === 'success') {\n          localStorage.setItem('token', token);\n          navigate('/');\n        } else {\n          setMessage(message);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        if (error) setMessage(error.message);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        {message && (\n          <Typography variant=\"body1\" color=\"red\" sx={{ mt: 2 }}>\n            {message}\n          </Typography>\n        )}\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"User Name\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirm-password\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            id=\"confirm-password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={loading}\n          >\n            Register\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {'Already have an account? Login'}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}