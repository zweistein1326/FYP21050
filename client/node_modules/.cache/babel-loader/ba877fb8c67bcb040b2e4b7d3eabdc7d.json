{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CredentialTile from '../components/CredentialTile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(props.auth.user !== null);\n  const [];\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n\n  const {\n    id\n  } = useParams();\n  console.log(props.auth.user.credentials);\n\n  const getUserInfo = () => {\n    fetchInfo({\n      variables: {\n        id: id\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: \"User information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [loggedIn && props.auth.user ? '' : 'NOT', \" logged-in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), loggedIn && props.auth.user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"ID: \", props.auth.user.id, \" (@zweistein1326)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Username: \", props.auth.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Name: \", props.auth.user.firstname, \" \", props.auth.user.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Email: \", props.auth.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Username: \", props.auth.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Update user information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Your saved credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), props.auth.user.credentials ? Object.values(props.auth.user.credentials).map((credential, index) => /*#__PURE__*/_jsxDEV(CredentialTile, {\n          credential: credential,\n          title: Object.keys(props.auth.user.credentials)[index]\n        }, credential.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 87\n        }, this)) // <Link to={`${props.auth.user.degreeCertificate.digest}`}><Typography>Degree Certificate</Typography></Link>\n        : '', /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"KNze3tKMjuVG+64H4tERTa9bEQY=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Home.tsx"],"names":["Box","Button","Typography","useState","connect","useParams","CredentialTile","Home","props","loggedIn","setLoggedIn","auth","user","handleLogout","localStorage","removeItem","id","console","log","credentials","getUserInfo","fetchInfo","variables","then","res","username","firstname","lastname","email","Object","values","map","credential","index","keys","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { Box, Button, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport CredentialTile from '../components/CredentialTile';\n\nconst Home = (props:any) => {\n  const [loggedIn, setLoggedIn] = useState(\n    props.auth.user !==null ,\n  );\n  const []\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n  \n  const {id} = useParams();\n\n  console.log(props.auth.user.credentials);\n\n  const getUserInfo =() =>{\n    fetchInfo({variables:{id:id}}).then((res)=>{console.log(res)})\n  }\n\n  return (\n    <Box>\n    <Box >\n    User information\n    </Box>\n    <>\n    {/* <Typography variant=\"h2\">Home Page</Typography> */}\n      <Typography>\n        {loggedIn && props.auth.user ? '' : 'NOT'} logged-in\n      </Typography>\n      {loggedIn && props.auth.user?\n      <>\n        <Typography>\n          ID: {props.auth.user.id} (@zweistein1326)\n        </Typography>\n        <Typography>\n          Username: {props.auth.user.username}\n        </Typography>\n        <Typography>\n          Name: {props.auth.user.firstname} {props.auth.user.lastname}\n        </Typography>\n        <Typography>\n          Email: {props.auth.user.email}\n        </Typography>\n        <Typography>\n          Username: {props.auth.user.username}\n        </Typography>\n        <Typography>\n          Update user information\n        </Typography>\n        <Typography>\n          Your saved credentials\n        </Typography>\n        {props.auth.user.credentials ?\n        Object.values(props.auth.user.credentials).map((credential:any,index:number)=><CredentialTile key={credential.id} credential={credential} title={Object.keys(props.auth.user.credentials)[index]} />)\n          // <Link to={`${props.auth.user.degreeCertificate.digest}`}><Typography>Degree Certificate</Typography></Link>\n        :''}\n        <Button onClick={handleLogout}>Logout</Button>\n      </>: \n      <Button href=\"/login\">Login</Button>}\n    </>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state:any) => ({\n  auth:state.auth\n})\n\nexport default connect(mapStateToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}