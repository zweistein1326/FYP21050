{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Credential.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Credential = props => {\n  _s();\n\n  const {\n    credentialId\n  } = useParams();\n  const {\n    credential,\n    setCredential\n  } = {\n    null\n  };\n  const [isAuth, setAuth] = useState(props.auth.user !== null //set inital to public\n  );\n\n  const fetchCredentialInfo = () => {\n    credential = Object.values(props.auth.user.credentials).find(id => id == credentialId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Hi this is credential no. \", `${credentialId}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${props.auth.user.degreeCertificate.issuer}`,\n        children: [\"Issuer: \", props.auth.user.degreeCertificate.issuer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${props.auth.user.degreeCertificate.issuer}`,\n        children: [\"Signature: \", props.auth.user.degreeCertificate.signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: props.auth.user.degreeCertificate.url,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Url: \", props.auth.user.degreeCertificate.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"View History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Credential, \"9H/rBGIfRXDj/V3uDSdkpbql5p8=\", false, function () {\n  return [useParams];\n});\n\n_c = Credential;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Credential);\n\nvar _c;\n\n$RefreshReg$(_c, \"Credential\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Credential.tsx"],"names":["Typography","useState","connect","Link","useParams","Credential","props","credentialId","credential","setCredential","null","isAuth","setAuth","auth","user","fetchCredentialInfo","Object","values","credentials","find","id","degreeCertificate","issuer","signature","url","mapStateToProps","state"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,eAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAe;AAAA;;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAiBH,SAAS,EAAhC;AACA,QAAM;AAACI,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAA6B;AAACC,IAAAA;AAAD,GAAnC;AACA,QAAM,CAACC,MAAD,EAAQC,OAAR,IAAmBX,QAAQ,CAC7BK,KAAK,CAACO,IAAN,CAAWC,IAAX,KAAoB,IADS,CACJ;AADI,GAAjC;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAC9BP,IAAAA,UAAU,GAAGQ,MAAM,CAACC,MAAP,CAAcX,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBI,WAA9B,EAA2CC,IAA3C,CAAiDC,EAAD,IAAMA,EAAE,IAAIb,YAA5D,CAAb;AACH,GAFD;;AAIA,sBACI;AAAA,4BACA,QAAC,UAAD;AAAA,+CACgC,GAAEA,YAAa,EAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,UAAD;AAAA,6BAAY,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,SAAQD,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBO,iBAAhB,CAAkCC,MAAO,EAA5D;AAAA,+BAAwEhB,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBO,iBAAhB,CAAkCC,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,UAAD;AAAA,6BAAY,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,SAAQhB,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBO,iBAAhB,CAAkCC,MAAO,EAA5D;AAAA,kCAA2EhB,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBO,iBAAhB,CAAkCE,SAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAG,MAAA,IAAI,EAAEjB,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBO,iBAAhB,CAAkCG,GAA3C;AAAA,6BAAgD,QAAC,UAAD;AAAA,4BAAkBlB,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAgBO,iBAAhB,CAAkCG,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,YANA,eAOA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADJ;AAWH,CAtBD;;GAAMnB,U;UACqBD,S;;;KADrBC,U;;AAwBN,MAAMoB,eAAe,GAAGC,KAAD,KAAc;AACjCb,EAAAA,IAAI,EAACa,KAAK,CAACb;AADsB,CAAd,CAAvB;;AAIA,eAAeX,OAAO,CAACuB,eAAD,CAAP,CAAyBpB,UAAzB,CAAf","sourcesContent":["import {Typography} from '@mui/material';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\n\n\nconst Credential = (props:any) => {\n    const {credentialId} = useParams();\n    const {credential,setCredential} = {null};\n    const [isAuth,setAuth] = useState(\n        props.auth.user !== null //set inital to public\n    );    \n\n    const fetchCredentialInfo = () => {\n        credential = Object.values(props.auth.user.credentials).find((id)=>id == credentialId)\n    }\n\n    return(\n        <>\n        <Typography>\n            Hi this is credential no. {`${credentialId}`}\n        </Typography>\n        <Typography><Link to={`/user/${props.auth.user.degreeCertificate.issuer}`}>Issuer: {props.auth.user.degreeCertificate.issuer}</Link></Typography>\n        <Typography><Link to={`/user/${props.auth.user.degreeCertificate.issuer}`}>Signature: {props.auth.user.degreeCertificate.signature}</Link></Typography>\n        <a href={props.auth.user.degreeCertificate.url}><Typography>Url: {props.auth.user.degreeCertificate.url}</Typography></a>\n        <Typography>View History</Typography>\n        </>\n    )\n}\n\nconst mapStateToProps =(state:any)=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(Credential);"]},"metadata":{},"sourceType":"module"}