{"ast":null,"code":"/* eslint linebreak-style: [\"error\", \"windows\"] */\n\n/* eslint-disable no-use-before-define */\nimport Hash from './lib/index.js';\nconst {\n  HmacMD5,\n  HmacSHA1,\n  HmacSHA224,\n  HmacSHA256,\n  HmacSHA384,\n  HmacSHA512,\n  format: {\n    Hex\n  }\n} = Hash;\n/**\r\n *\r\n * @param {string} string\r\n * @param {string} algorithm\r\n */\n\nconst hmacString = async (string, key, algorithm) => {\n  switch (algorithm) {\n    case 'HmacMD5':\n      {\n        const HMac = await HmacMD5(string, key);\n        return Hex.stringify(HMac);\n      }\n\n    case 'HmacSHA1':\n      {\n        const HMac = await HmacSHA1(string, key);\n        return Hex.stringify(HMac);\n      }\n\n    case 'HmacSHA224':\n      {\n        const HMac = await HmacSHA224(string, key);\n        return Hex.stringify(HMac);\n      }\n\n    case 'HmacSHA256':\n      {\n        const HMac = await HmacSHA256(string, key);\n        return Hex.stringify(HMac);\n      }\n\n    case 'HmacSHA384':\n      {\n        const HMac = await HmacSHA384(string, key);\n        return Hex.stringify(HMac);\n      }\n\n    case 'HmacSHA512':\n      {\n        const HMac = await HmacSHA512(string, key);\n        return Hex.stringify(HMac);\n      }\n\n    default:\n      throw new Error(`${algorithm} algorithm is not suported`);\n  }\n};\n\nexport default hmacString;","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/node_modules/react-native-hash/JSHash/JSHmac.js"],"names":["Hash","HmacMD5","HmacSHA1","HmacSHA224","HmacSHA256","HmacSHA384","HmacSHA512","format","Hex","hmacString","string","key","algorithm","HMac","stringify","Error"],"mappings":"AAAA;;AACA;AAEA,OAAOA,IAAP,MAAiB,gBAAjB;AAEA,MAAM;AACJC,EAAAA,OADI;AAEJC,EAAAA,QAFI;AAGJC,EAAAA,UAHI;AAIJC,EAAAA,UAJI;AAKJC,EAAAA,UALI;AAMJC,EAAAA,UANI;AAOJC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAPJ,IAQFR,IARJ;AAUA;AACA;AACA;AACA;AACA;;AACA,MAAMS,UAAU,GAAG,OAAOC,MAAP,EAAeC,GAAf,EAAoBC,SAApB,KAAkC;AACnD,UAAQA,SAAR;AACE,SAAK,SAAL;AAAgB;AACd,cAAMC,IAAI,GAAG,MAAMZ,OAAO,CAACS,MAAD,EAASC,GAAT,CAA1B;AACA,eAAOH,GAAG,CAACM,SAAJ,CAAcD,IAAd,CAAP;AACD;;AAED,SAAK,UAAL;AAAiB;AACf,cAAMA,IAAI,GAAG,MAAMX,QAAQ,CAACQ,MAAD,EAASC,GAAT,CAA3B;AACA,eAAOH,GAAG,CAACM,SAAJ,CAAcD,IAAd,CAAP;AACD;;AAED,SAAK,YAAL;AAAmB;AACjB,cAAMA,IAAI,GAAG,MAAMV,UAAU,CAACO,MAAD,EAASC,GAAT,CAA7B;AACA,eAAOH,GAAG,CAACM,SAAJ,CAAcD,IAAd,CAAP;AACD;;AAED,SAAK,YAAL;AAAmB;AACjB,cAAMA,IAAI,GAAG,MAAMT,UAAU,CAACM,MAAD,EAASC,GAAT,CAA7B;AACA,eAAOH,GAAG,CAACM,SAAJ,CAAcD,IAAd,CAAP;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,cAAMA,IAAI,GAAG,MAAMR,UAAU,CAACK,MAAD,EAASC,GAAT,CAA7B;AACA,eAAOH,GAAG,CAACM,SAAJ,CAAcD,IAAd,CAAP;AACD;;AACD,SAAK,YAAL;AAAmB;AACjB,cAAMA,IAAI,GAAG,MAAMP,UAAU,CAACI,MAAD,EAASC,GAAT,CAA7B;AACA,eAAOH,GAAG,CAACM,SAAJ,CAAcD,IAAd,CAAP;AACD;;AACD;AACE,YAAM,IAAIE,KAAJ,CAAW,GAAEH,SAAU,4BAAvB,CAAN;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeH,UAAf","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n/* eslint-disable no-use-before-define */\r\n\r\nimport Hash from './lib/index.js';\r\n\r\nconst {\r\n  HmacMD5,\r\n  HmacSHA1,\r\n  HmacSHA224,\r\n  HmacSHA256,\r\n  HmacSHA384,\r\n  HmacSHA512,\r\n  format: { Hex },\r\n} = Hash;\r\n\r\n/**\r\n *\r\n * @param {string} string\r\n * @param {string} algorithm\r\n */\r\nconst hmacString = async (string, key, algorithm) => {\r\n  switch (algorithm) {\r\n    case 'HmacMD5': {\r\n      const HMac = await HmacMD5(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n\r\n    case 'HmacSHA1': {\r\n      const HMac = await HmacSHA1(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n\r\n    case 'HmacSHA224': {\r\n      const HMac = await HmacSHA224(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n\r\n    case 'HmacSHA256': {\r\n      const HMac = await HmacSHA256(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n    case 'HmacSHA384': {\r\n      const HMac = await HmacSHA384(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n    case 'HmacSHA512': {\r\n      const HMac = await HmacSHA512(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n    default:\r\n      throw new Error(`${algorithm} algorithm is not suported`);\r\n  }\r\n};\r\n\r\nexport default hmacString;\r\n"]},"metadata":{},"sourceType":"module"}