{"ast":null,"code":"// ASN.1 JavaScript decoder\n// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\n\n/*global oids */\nimport { Int10 } from \"./int10\";\nvar ellipsis = \"\\u2026\";\nvar reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nvar reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\n\nfunction stringCut(str, len) {\n  if (str.length > len) {\n    str = str.substring(0, len) + ellipsis;\n  }\n\n  return str;\n}\n\nvar Stream =\n/** @class */\nfunction () {\n  function Stream(enc, pos) {\n    this.hexDigits = \"0123456789ABCDEF\";\n\n    if (enc instanceof Stream) {\n      this.enc = enc.enc;\n      this.pos = enc.pos;\n    } else {\n      // enc should be an array or a binary string\n      this.enc = enc;\n      this.pos = pos;\n    }\n  }\n\n  Stream.prototype.get = function (pos) {\n    if (pos === undefined) {\n      pos = this.pos++;\n    }\n\n    if (pos >= this.enc.length) {\n      throw new Error(\"Requesting byte offset \" + pos + \" on a stream of length \" + this.enc.length);\n    }\n\n    return \"string\" === typeof this.enc ? this.enc.charCodeAt(pos) : this.enc[pos];\n  };\n\n  Stream.prototype.hexByte = function (b) {\n    return this.hexDigits.charAt(b >> 4 & 0xF) + this.hexDigits.charAt(b & 0xF);\n  };\n\n  Stream.prototype.hexDump = function (start, end, raw) {\n    var s = \"\";\n\n    for (var i = start; i < end; ++i) {\n      s += this.hexByte(this.get(i));\n\n      if (raw !== true) {\n        switch (i & 0xF) {\n          case 0x7:\n            s += \"  \";\n            break;\n\n          case 0xF:\n            s += \"\\n\";\n            break;\n\n          default:\n            s += \" \";\n        }\n      }\n    }\n\n    return s;\n  };\n\n  Stream.prototype.isASCII = function (start, end) {\n    for (var i = start; i < end; ++i) {\n      var c = this.get(i);\n\n      if (c < 32 || c > 176) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Stream.prototype.parseStringISO = function (start, end) {\n    var s = \"\";\n\n    for (var i = start; i < end; ++i) {\n      s += String.fromCharCode(this.get(i));\n    }\n\n    return s;\n  };\n\n  Stream.prototype.parseStringUTF = function (start, end) {\n    var s = \"\";\n\n    for (var i = start; i < end;) {\n      var c = this.get(i++);\n\n      if (c < 128) {\n        s += String.fromCharCode(c);\n      } else if (c > 191 && c < 224) {\n        s += String.fromCharCode((c & 0x1F) << 6 | this.get(i++) & 0x3F);\n      } else {\n        s += String.fromCharCode((c & 0x0F) << 12 | (this.get(i++) & 0x3F) << 6 | this.get(i++) & 0x3F);\n      }\n    }\n\n    return s;\n  };\n\n  Stream.prototype.parseStringBMP = function (start, end) {\n    var str = \"\";\n    var hi;\n    var lo;\n\n    for (var i = start; i < end;) {\n      hi = this.get(i++);\n      lo = this.get(i++);\n      str += String.fromCharCode(hi << 8 | lo);\n    }\n\n    return str;\n  };\n\n  Stream.prototype.parseTime = function (start, end, shortYear) {\n    var s = this.parseStringISO(start, end);\n    var m = (shortYear ? reTimeS : reTimeL).exec(s);\n\n    if (!m) {\n      return \"Unrecognized time: \" + s;\n    }\n\n    if (shortYear) {\n      // to avoid querying the timer, use the fixed range [1970, 2069]\n      // it will conform with ITU X.400 [-10, +40] sliding window until 2030\n      m[1] = +m[1];\n      m[1] += +m[1] < 70 ? 2000 : 1900;\n    }\n\n    s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n\n    if (m[5]) {\n      s += \":\" + m[5];\n\n      if (m[6]) {\n        s += \":\" + m[6];\n\n        if (m[7]) {\n          s += \".\" + m[7];\n        }\n      }\n    }\n\n    if (m[8]) {\n      s += \" UTC\";\n\n      if (m[8] != \"Z\") {\n        s += m[8];\n\n        if (m[9]) {\n          s += \":\" + m[9];\n        }\n      }\n    }\n\n    return s;\n  };\n\n  Stream.prototype.parseInteger = function (start, end) {\n    var v = this.get(start);\n    var neg = v > 127;\n    var pad = neg ? 255 : 0;\n    var len;\n    var s = \"\"; // skip unuseful bits (not allowed in DER)\n\n    while (v == pad && ++start < end) {\n      v = this.get(start);\n    }\n\n    len = end - start;\n\n    if (len === 0) {\n      return neg ? -1 : 0;\n    } // show bit length of huge integers\n\n\n    if (len > 4) {\n      s = v;\n      len <<= 3;\n\n      while (((+s ^ pad) & 0x80) == 0) {\n        s = +s << 1;\n        --len;\n      }\n\n      s = \"(\" + len + \" bit)\\n\";\n    } // decode the integer\n\n\n    if (neg) {\n      v = v - 256;\n    }\n\n    var n = new Int10(v);\n\n    for (var i = start + 1; i < end; ++i) {\n      n.mulAdd(256, this.get(i));\n    }\n\n    return s + n.toString();\n  };\n\n  Stream.prototype.parseBitString = function (start, end, maxLength) {\n    var unusedBit = this.get(start);\n    var lenBit = (end - start - 1 << 3) - unusedBit;\n    var intro = \"(\" + lenBit + \" bit)\\n\";\n    var s = \"\";\n\n    for (var i = start + 1; i < end; ++i) {\n      var b = this.get(i);\n      var skip = i == end - 1 ? unusedBit : 0;\n\n      for (var j = 7; j >= skip; --j) {\n        s += b >> j & 1 ? \"1\" : \"0\";\n      }\n\n      if (s.length > maxLength) {\n        return intro + stringCut(s, maxLength);\n      }\n    }\n\n    return intro + s;\n  };\n\n  Stream.prototype.parseOctetString = function (start, end, maxLength) {\n    if (this.isASCII(start, end)) {\n      return stringCut(this.parseStringISO(start, end), maxLength);\n    }\n\n    var len = end - start;\n    var s = \"(\" + len + \" byte)\\n\";\n    maxLength /= 2; // we work in bytes\n\n    if (len > maxLength) {\n      end = start + maxLength;\n    }\n\n    for (var i = start; i < end; ++i) {\n      s += this.hexByte(this.get(i));\n    }\n\n    if (len > maxLength) {\n      s += ellipsis;\n    }\n\n    return s;\n  };\n\n  Stream.prototype.parseOID = function (start, end, maxLength) {\n    var s = \"\";\n    var n = new Int10();\n    var bits = 0;\n\n    for (var i = start; i < end; ++i) {\n      var v = this.get(i);\n      n.mulAdd(128, v & 0x7F);\n      bits += 7;\n\n      if (!(v & 0x80)) {\n        // finished\n        if (s === \"\") {\n          n = n.simplify();\n\n          if (n instanceof Int10) {\n            n.sub(80);\n            s = \"2.\" + n.toString();\n          } else {\n            var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n            s = m + \".\" + (n - m * 40);\n          }\n        } else {\n          s += \".\" + n.toString();\n        }\n\n        if (s.length > maxLength) {\n          return stringCut(s, maxLength);\n        }\n\n        n = new Int10();\n        bits = 0;\n      }\n    }\n\n    if (bits > 0) {\n      s += \".incomplete\";\n    }\n\n    return s;\n  };\n\n  return Stream;\n}();\n\nexport { Stream };\n\nvar ASN1 =\n/** @class */\nfunction () {\n  function ASN1(stream, header, length, tag, sub) {\n    if (!(tag instanceof ASN1Tag)) {\n      throw new Error(\"Invalid tag value.\");\n    }\n\n    this.stream = stream;\n    this.header = header;\n    this.length = length;\n    this.tag = tag;\n    this.sub = sub;\n  }\n\n  ASN1.prototype.typeName = function () {\n    switch (this.tag.tagClass) {\n      case 0:\n        // universal\n        switch (this.tag.tagNumber) {\n          case 0x00:\n            return \"EOC\";\n\n          case 0x01:\n            return \"BOOLEAN\";\n\n          case 0x02:\n            return \"INTEGER\";\n\n          case 0x03:\n            return \"BIT_STRING\";\n\n          case 0x04:\n            return \"OCTET_STRING\";\n\n          case 0x05:\n            return \"NULL\";\n\n          case 0x06:\n            return \"OBJECT_IDENTIFIER\";\n\n          case 0x07:\n            return \"ObjectDescriptor\";\n\n          case 0x08:\n            return \"EXTERNAL\";\n\n          case 0x09:\n            return \"REAL\";\n\n          case 0x0A:\n            return \"ENUMERATED\";\n\n          case 0x0B:\n            return \"EMBEDDED_PDV\";\n\n          case 0x0C:\n            return \"UTF8String\";\n\n          case 0x10:\n            return \"SEQUENCE\";\n\n          case 0x11:\n            return \"SET\";\n\n          case 0x12:\n            return \"NumericString\";\n\n          case 0x13:\n            return \"PrintableString\";\n          // ASCII subset\n\n          case 0x14:\n            return \"TeletexString\";\n          // aka T61String\n\n          case 0x15:\n            return \"VideotexString\";\n\n          case 0x16:\n            return \"IA5String\";\n          // ASCII\n\n          case 0x17:\n            return \"UTCTime\";\n\n          case 0x18:\n            return \"GeneralizedTime\";\n\n          case 0x19:\n            return \"GraphicString\";\n\n          case 0x1A:\n            return \"VisibleString\";\n          // ASCII subset\n\n          case 0x1B:\n            return \"GeneralString\";\n\n          case 0x1C:\n            return \"UniversalString\";\n\n          case 0x1E:\n            return \"BMPString\";\n        }\n\n        return \"Universal_\" + this.tag.tagNumber.toString();\n\n      case 1:\n        return \"Application_\" + this.tag.tagNumber.toString();\n\n      case 2:\n        return \"[\" + this.tag.tagNumber.toString() + \"]\";\n      // Context\n\n      case 3:\n        return \"Private_\" + this.tag.tagNumber.toString();\n    }\n  };\n\n  ASN1.prototype.content = function (maxLength) {\n    if (this.tag === undefined) {\n      return null;\n    }\n\n    if (maxLength === undefined) {\n      maxLength = Infinity;\n    }\n\n    var content = this.posContent();\n    var len = Math.abs(this.length);\n\n    if (!this.tag.isUniversal()) {\n      if (this.sub !== null) {\n        return \"(\" + this.sub.length + \" elem)\";\n      }\n\n      return this.stream.parseOctetString(content, content + len, maxLength);\n    }\n\n    switch (this.tag.tagNumber) {\n      case 0x01:\n        // BOOLEAN\n        return this.stream.get(content) === 0 ? \"false\" : \"true\";\n\n      case 0x02:\n        // INTEGER\n        return this.stream.parseInteger(content, content + len);\n\n      case 0x03:\n        // BIT_STRING\n        return this.sub ? \"(\" + this.sub.length + \" elem)\" : this.stream.parseBitString(content, content + len, maxLength);\n\n      case 0x04:\n        // OCTET_STRING\n        return this.sub ? \"(\" + this.sub.length + \" elem)\" : this.stream.parseOctetString(content, content + len, maxLength);\n      // case 0x05: // NULL\n\n      case 0x06:\n        // OBJECT_IDENTIFIER\n        return this.stream.parseOID(content, content + len, maxLength);\n      // case 0x07: // ObjectDescriptor\n      // case 0x08: // EXTERNAL\n      // case 0x09: // REAL\n      // case 0x0A: // ENUMERATED\n      // case 0x0B: // EMBEDDED_PDV\n\n      case 0x10: // SEQUENCE\n\n      case 0x11:\n        // SET\n        if (this.sub !== null) {\n          return \"(\" + this.sub.length + \" elem)\";\n        } else {\n          return \"(no elem)\";\n        }\n\n      case 0x0C:\n        // UTF8String\n        return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n\n      case 0x12: // NumericString\n\n      case 0x13: // PrintableString\n\n      case 0x14: // TeletexString\n\n      case 0x15: // VideotexString\n\n      case 0x16: // IA5String\n      // case 0x19: // GraphicString\n\n      case 0x1A:\n        // VisibleString\n        // case 0x1B: // GeneralString\n        // case 0x1C: // UniversalString\n        return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n\n      case 0x1E:\n        // BMPString\n        return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n\n      case 0x17: // UTCTime\n\n      case 0x18:\n        // GeneralizedTime\n        return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);\n    }\n\n    return null;\n  };\n\n  ASN1.prototype.toString = function () {\n    return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + (this.sub === null ? \"null\" : this.sub.length) + \"]\";\n  };\n\n  ASN1.prototype.toPrettyString = function (indent) {\n    if (indent === undefined) {\n      indent = \"\";\n    }\n\n    var s = indent + this.typeName() + \" @\" + this.stream.pos;\n\n    if (this.length >= 0) {\n      s += \"+\";\n    }\n\n    s += this.length;\n\n    if (this.tag.tagConstructed) {\n      s += \" (constructed)\";\n    } else if (this.tag.isUniversal() && (this.tag.tagNumber == 0x03 || this.tag.tagNumber == 0x04) && this.sub !== null) {\n      s += \" (encapsulates)\";\n    }\n\n    s += \"\\n\";\n\n    if (this.sub !== null) {\n      indent += \"  \";\n\n      for (var i = 0, max = this.sub.length; i < max; ++i) {\n        s += this.sub[i].toPrettyString(indent);\n      }\n    }\n\n    return s;\n  };\n\n  ASN1.prototype.posStart = function () {\n    return this.stream.pos;\n  };\n\n  ASN1.prototype.posContent = function () {\n    return this.stream.pos + this.header;\n  };\n\n  ASN1.prototype.posEnd = function () {\n    return this.stream.pos + this.header + Math.abs(this.length);\n  };\n\n  ASN1.prototype.toHexString = function () {\n    return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n  };\n\n  ASN1.decodeLength = function (stream) {\n    var buf = stream.get();\n    var len = buf & 0x7F;\n\n    if (len == buf) {\n      return len;\n    } // no reason to use Int10, as it would be a huge buffer anyways\n\n\n    if (len > 6) {\n      throw new Error(\"Length over 48 bits not supported at position \" + (stream.pos - 1));\n    }\n\n    if (len === 0) {\n      return null;\n    } // undefined\n\n\n    buf = 0;\n\n    for (var i = 0; i < len; ++i) {\n      buf = buf * 256 + stream.get();\n    }\n\n    return buf;\n  };\n  /**\n   * Retrieve the hexadecimal value (as a string) of the current ASN.1 element\n   * @returns {string}\n   * @public\n   */\n\n\n  ASN1.prototype.getHexStringValue = function () {\n    var hexString = this.toHexString();\n    var offset = this.header * 2;\n    var length = this.length * 2;\n    return hexString.substr(offset, length);\n  };\n\n  ASN1.decode = function (str) {\n    var stream;\n\n    if (!(str instanceof Stream)) {\n      stream = new Stream(str, 0);\n    } else {\n      stream = str;\n    }\n\n    var streamStart = new Stream(stream);\n    var tag = new ASN1Tag(stream);\n    var len = ASN1.decodeLength(stream);\n    var start = stream.pos;\n    var header = start - streamStart.pos;\n    var sub = null;\n\n    var getSub = function () {\n      var ret = [];\n\n      if (len !== null) {\n        // definite length\n        var end = start + len;\n\n        while (stream.pos < end) {\n          ret[ret.length] = ASN1.decode(stream);\n        }\n\n        if (stream.pos != end) {\n          throw new Error(\"Content size is not correct for container starting at offset \" + start);\n        }\n      } else {\n        // undefined length\n        try {\n          for (;;) {\n            var s = ASN1.decode(stream);\n\n            if (s.tag.isEOC()) {\n              break;\n            }\n\n            ret[ret.length] = s;\n          }\n\n          len = start - stream.pos; // undefined lengths are represented as negative values\n        } catch (e) {\n          throw new Error(\"Exception while decoding undefined length content: \" + e);\n        }\n      }\n\n      return ret;\n    };\n\n    if (tag.tagConstructed) {\n      // must have valid content\n      sub = getSub();\n    } else if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {\n      // sometimes BitString and OctetString are used to encapsulate ASN.1\n      try {\n        if (tag.tagNumber == 0x03) {\n          if (stream.get() != 0) {\n            throw new Error(\"BIT STRINGs with unused bits cannot encapsulate.\");\n          }\n        }\n\n        sub = getSub();\n\n        for (var i = 0; i < sub.length; ++i) {\n          if (sub[i].tag.isEOC()) {\n            throw new Error(\"EOC is not supposed to be actual content.\");\n          }\n        }\n      } catch (e) {\n        // but silently ignore when they don't\n        sub = null;\n      }\n    }\n\n    if (sub === null) {\n      if (len === null) {\n        throw new Error(\"We can't skip over an invalid tag with undefined length at offset \" + start);\n      }\n\n      stream.pos = start + Math.abs(len);\n    }\n\n    return new ASN1(streamStart, header, len, tag, sub);\n  };\n\n  return ASN1;\n}();\n\nexport { ASN1 };\n\nvar ASN1Tag =\n/** @class */\nfunction () {\n  function ASN1Tag(stream) {\n    var buf = stream.get();\n    this.tagClass = buf >> 6;\n    this.tagConstructed = (buf & 0x20) !== 0;\n    this.tagNumber = buf & 0x1F;\n\n    if (this.tagNumber == 0x1F) {\n      // long tag\n      var n = new Int10();\n\n      do {\n        buf = stream.get();\n        n.mulAdd(128, buf & 0x7F);\n      } while (buf & 0x80);\n\n      this.tagNumber = n.simplify();\n    }\n  }\n\n  ASN1Tag.prototype.isUniversal = function () {\n    return this.tagClass === 0x00;\n  };\n\n  ASN1Tag.prototype.isEOC = function () {\n    return this.tagClass === 0x00 && this.tagNumber === 0x00;\n  };\n\n  return ASN1Tag;\n}();\n\nexport { ASN1Tag };","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/node_modules/jsencrypt/lib/lib/asn1js/asn1.js"],"names":["Int10","ellipsis","reTimeS","reTimeL","stringCut","str","len","length","substring","Stream","enc","pos","hexDigits","prototype","get","undefined","Error","charCodeAt","hexByte","b","charAt","hexDump","start","end","raw","s","i","isASCII","c","parseStringISO","String","fromCharCode","parseStringUTF","parseStringBMP","hi","lo","parseTime","shortYear","m","exec","parseInteger","v","neg","pad","n","mulAdd","toString","parseBitString","maxLength","unusedBit","lenBit","intro","skip","j","parseOctetString","parseOID","bits","simplify","sub","ASN1","stream","header","tag","ASN1Tag","typeName","tagClass","tagNumber","content","Infinity","posContent","Math","abs","isUniversal","toPrettyString","indent","tagConstructed","max","posStart","posEnd","toHexString","decodeLength","buf","getHexStringValue","hexString","offset","substr","decode","streamStart","getSub","ret","isEOC","e"],"mappings":"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","sourcesContent":["// ASN.1 JavaScript decoder\n// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\n/*global oids */\nimport { Int10 } from \"./int10\";\nvar ellipsis = \"\\u2026\";\nvar reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nvar reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nfunction stringCut(str, len) {\n    if (str.length > len) {\n        str = str.substring(0, len) + ellipsis;\n    }\n    return str;\n}\nvar Stream = /** @class */ (function () {\n    function Stream(enc, pos) {\n        this.hexDigits = \"0123456789ABCDEF\";\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        }\n        else {\n            // enc should be an array or a binary string\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n    Stream.prototype.get = function (pos) {\n        if (pos === undefined) {\n            pos = this.pos++;\n        }\n        if (pos >= this.enc.length) {\n            throw new Error(\"Requesting byte offset \" + pos + \" on a stream of length \" + this.enc.length);\n        }\n        return (\"string\" === typeof this.enc) ? this.enc.charCodeAt(pos) : this.enc[pos];\n    };\n    Stream.prototype.hexByte = function (b) {\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\n    };\n    Stream.prototype.hexDump = function (start, end, raw) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true) {\n                switch (i & 0xF) {\n                    case 0x7:\n                        s += \"  \";\n                        break;\n                    case 0xF:\n                        s += \"\\n\";\n                        break;\n                    default:\n                        s += \" \";\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.isASCII = function (start, end) {\n        for (var i = start; i < end; ++i) {\n            var c = this.get(i);\n            if (c < 32 || c > 176) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Stream.prototype.parseStringISO = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += String.fromCharCode(this.get(i));\n        }\n        return s;\n    };\n    Stream.prototype.parseStringUTF = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end;) {\n            var c = this.get(i++);\n            if (c < 128) {\n                s += String.fromCharCode(c);\n            }\n            else if ((c > 191) && (c < 224)) {\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\n            }\n            else {\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseStringBMP = function (start, end) {\n        var str = \"\";\n        var hi;\n        var lo;\n        for (var i = start; i < end;) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    };\n    Stream.prototype.parseTime = function (start, end, shortYear) {\n        var s = this.parseStringISO(start, end);\n        var m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m) {\n            return \"Unrecognized time: \" + s;\n        }\n        if (shortYear) {\n            // to avoid querying the timer, use the fixed range [1970, 2069]\n            // it will conform with ITU X.400 [-10, +40] sliding window until 2030\n            m[1] = +m[1];\n            m[1] += (+m[1] < 70) ? 2000 : 1900;\n        }\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n        if (m[5]) {\n            s += \":\" + m[5];\n            if (m[6]) {\n                s += \":\" + m[6];\n                if (m[7]) {\n                    s += \".\" + m[7];\n                }\n            }\n        }\n        if (m[8]) {\n            s += \" UTC\";\n            if (m[8] != \"Z\") {\n                s += m[8];\n                if (m[9]) {\n                    s += \":\" + m[9];\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseInteger = function (start, end) {\n        var v = this.get(start);\n        var neg = (v > 127);\n        var pad = neg ? 255 : 0;\n        var len;\n        var s = \"\";\n        // skip unuseful bits (not allowed in DER)\n        while (v == pad && ++start < end) {\n            v = this.get(start);\n        }\n        len = end - start;\n        if (len === 0) {\n            return neg ? -1 : 0;\n        }\n        // show bit length of huge integers\n        if (len > 4) {\n            s = v;\n            len <<= 3;\n            while (((+s ^ pad) & 0x80) == 0) {\n                s = +s << 1;\n                --len;\n            }\n            s = \"(\" + len + \" bit)\\n\";\n        }\n        // decode the integer\n        if (neg) {\n            v = v - 256;\n        }\n        var n = new Int10(v);\n        for (var i = start + 1; i < end; ++i) {\n            n.mulAdd(256, this.get(i));\n        }\n        return s + n.toString();\n    };\n    Stream.prototype.parseBitString = function (start, end, maxLength) {\n        var unusedBit = this.get(start);\n        var lenBit = ((end - start - 1) << 3) - unusedBit;\n        var intro = \"(\" + lenBit + \" bit)\\n\";\n        var s = \"\";\n        for (var i = start + 1; i < end; ++i) {\n            var b = this.get(i);\n            var skip = (i == end - 1) ? unusedBit : 0;\n            for (var j = 7; j >= skip; --j) {\n                s += (b >> j) & 1 ? \"1\" : \"0\";\n            }\n            if (s.length > maxLength) {\n                return intro + stringCut(s, maxLength);\n            }\n        }\n        return intro + s;\n    };\n    Stream.prototype.parseOctetString = function (start, end, maxLength) {\n        if (this.isASCII(start, end)) {\n            return stringCut(this.parseStringISO(start, end), maxLength);\n        }\n        var len = end - start;\n        var s = \"(\" + len + \" byte)\\n\";\n        maxLength /= 2; // we work in bytes\n        if (len > maxLength) {\n            end = start + maxLength;\n        }\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n        }\n        if (len > maxLength) {\n            s += ellipsis;\n        }\n        return s;\n    };\n    Stream.prototype.parseOID = function (start, end, maxLength) {\n        var s = \"\";\n        var n = new Int10();\n        var bits = 0;\n        for (var i = start; i < end; ++i) {\n            var v = this.get(i);\n            n.mulAdd(128, v & 0x7F);\n            bits += 7;\n            if (!(v & 0x80)) { // finished\n                if (s === \"\") {\n                    n = n.simplify();\n                    if (n instanceof Int10) {\n                        n.sub(80);\n                        s = \"2.\" + n.toString();\n                    }\n                    else {\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                        s = m + \".\" + (n - m * 40);\n                    }\n                }\n                else {\n                    s += \".\" + n.toString();\n                }\n                if (s.length > maxLength) {\n                    return stringCut(s, maxLength);\n                }\n                n = new Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0) {\n            s += \".incomplete\";\n        }\n        return s;\n    };\n    return Stream;\n}());\nexport { Stream };\nvar ASN1 = /** @class */ (function () {\n    function ASN1(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) {\n            throw new Error(\"Invalid tag value.\");\n        }\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n    ASN1.prototype.typeName = function () {\n        switch (this.tag.tagClass) {\n            case 0: // universal\n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return \"EOC\";\n                    case 0x01:\n                        return \"BOOLEAN\";\n                    case 0x02:\n                        return \"INTEGER\";\n                    case 0x03:\n                        return \"BIT_STRING\";\n                    case 0x04:\n                        return \"OCTET_STRING\";\n                    case 0x05:\n                        return \"NULL\";\n                    case 0x06:\n                        return \"OBJECT_IDENTIFIER\";\n                    case 0x07:\n                        return \"ObjectDescriptor\";\n                    case 0x08:\n                        return \"EXTERNAL\";\n                    case 0x09:\n                        return \"REAL\";\n                    case 0x0A:\n                        return \"ENUMERATED\";\n                    case 0x0B:\n                        return \"EMBEDDED_PDV\";\n                    case 0x0C:\n                        return \"UTF8String\";\n                    case 0x10:\n                        return \"SEQUENCE\";\n                    case 0x11:\n                        return \"SET\";\n                    case 0x12:\n                        return \"NumericString\";\n                    case 0x13:\n                        return \"PrintableString\"; // ASCII subset\n                    case 0x14:\n                        return \"TeletexString\"; // aka T61String\n                    case 0x15:\n                        return \"VideotexString\";\n                    case 0x16:\n                        return \"IA5String\"; // ASCII\n                    case 0x17:\n                        return \"UTCTime\";\n                    case 0x18:\n                        return \"GeneralizedTime\";\n                    case 0x19:\n                        return \"GraphicString\";\n                    case 0x1A:\n                        return \"VisibleString\"; // ASCII subset\n                    case 0x1B:\n                        return \"GeneralString\";\n                    case 0x1C:\n                        return \"UniversalString\";\n                    case 0x1E:\n                        return \"BMPString\";\n                }\n                return \"Universal_\" + this.tag.tagNumber.toString();\n            case 1:\n                return \"Application_\" + this.tag.tagNumber.toString();\n            case 2:\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; // Context\n            case 3:\n                return \"Private_\" + this.tag.tagNumber.toString();\n        }\n    };\n    ASN1.prototype.content = function (maxLength) {\n        if (this.tag === undefined) {\n            return null;\n        }\n        if (maxLength === undefined) {\n            maxLength = Infinity;\n        }\n        var content = this.posContent();\n        var len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null) {\n                return \"(\" + this.sub.length + \" elem)\";\n            }\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01: // BOOLEAN\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\n            case 0x02: // INTEGER\n                return this.stream.parseInteger(content, content + len);\n            case 0x03: // BIT_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04: // OCTET_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseOctetString(content, content + len, maxLength);\n            // case 0x05: // NULL\n            case 0x06: // OBJECT_IDENTIFIER\n                return this.stream.parseOID(content, content + len, maxLength);\n            // case 0x07: // ObjectDescriptor\n            // case 0x08: // EXTERNAL\n            // case 0x09: // REAL\n            // case 0x0A: // ENUMERATED\n            // case 0x0B: // EMBEDDED_PDV\n            case 0x10: // SEQUENCE\n            case 0x11: // SET\n                if (this.sub !== null) {\n                    return \"(\" + this.sub.length + \" elem)\";\n                }\n                else {\n                    return \"(no elem)\";\n                }\n            case 0x0C: // UTF8String\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12: // NumericString\n            case 0x13: // PrintableString\n            case 0x14: // TeletexString\n            case 0x15: // VideotexString\n            case 0x16: // IA5String\n            // case 0x19: // GraphicString\n            case 0x1A: // VisibleString\n                // case 0x1B: // GeneralString\n                // case 0x1C: // UniversalString\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1E: // BMPString\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17: // UTCTime\n            case 0x18: // GeneralizedTime\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\n        }\n        return null;\n    };\n    ASN1.prototype.toString = function () {\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? \"null\" : this.sub.length) + \"]\";\n    };\n    ASN1.prototype.toPrettyString = function (indent) {\n        if (indent === undefined) {\n            indent = \"\";\n        }\n        var s = indent + this.typeName() + \" @\" + this.stream.pos;\n        if (this.length >= 0) {\n            s += \"+\";\n        }\n        s += this.length;\n        if (this.tag.tagConstructed) {\n            s += \" (constructed)\";\n        }\n        else if ((this.tag.isUniversal() && ((this.tag.tagNumber == 0x03) || (this.tag.tagNumber == 0x04))) && (this.sub !== null)) {\n            s += \" (encapsulates)\";\n        }\n        s += \"\\n\";\n        if (this.sub !== null) {\n            indent += \"  \";\n            for (var i = 0, max = this.sub.length; i < max; ++i) {\n                s += this.sub[i].toPrettyString(indent);\n            }\n        }\n        return s;\n    };\n    ASN1.prototype.posStart = function () {\n        return this.stream.pos;\n    };\n    ASN1.prototype.posContent = function () {\n        return this.stream.pos + this.header;\n    };\n    ASN1.prototype.posEnd = function () {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    };\n    ASN1.prototype.toHexString = function () {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    };\n    ASN1.decodeLength = function (stream) {\n        var buf = stream.get();\n        var len = buf & 0x7F;\n        if (len == buf) {\n            return len;\n        }\n        // no reason to use Int10, as it would be a huge buffer anyways\n        if (len > 6) {\n            throw new Error(\"Length over 48 bits not supported at position \" + (stream.pos - 1));\n        }\n        if (len === 0) {\n            return null;\n        } // undefined\n        buf = 0;\n        for (var i = 0; i < len; ++i) {\n            buf = (buf * 256) + stream.get();\n        }\n        return buf;\n    };\n    /**\n     * Retrieve the hexadecimal value (as a string) of the current ASN.1 element\n     * @returns {string}\n     * @public\n     */\n    ASN1.prototype.getHexStringValue = function () {\n        var hexString = this.toHexString();\n        var offset = this.header * 2;\n        var length = this.length * 2;\n        return hexString.substr(offset, length);\n    };\n    ASN1.decode = function (str) {\n        var stream;\n        if (!(str instanceof Stream)) {\n            stream = new Stream(str, 0);\n        }\n        else {\n            stream = str;\n        }\n        var streamStart = new Stream(stream);\n        var tag = new ASN1Tag(stream);\n        var len = ASN1.decodeLength(stream);\n        var start = stream.pos;\n        var header = start - streamStart.pos;\n        var sub = null;\n        var getSub = function () {\n            var ret = [];\n            if (len !== null) {\n                // definite length\n                var end = start + len;\n                while (stream.pos < end) {\n                    ret[ret.length] = ASN1.decode(stream);\n                }\n                if (stream.pos != end) {\n                    throw new Error(\"Content size is not correct for container starting at offset \" + start);\n                }\n            }\n            else {\n                // undefined length\n                try {\n                    for (;;) {\n                        var s = ASN1.decode(stream);\n                        if (s.tag.isEOC()) {\n                            break;\n                        }\n                        ret[ret.length] = s;\n                    }\n                    len = start - stream.pos; // undefined lengths are represented as negative values\n                }\n                catch (e) {\n                    throw new Error(\"Exception while decoding undefined length content: \" + e);\n                }\n            }\n            return ret;\n        };\n        if (tag.tagConstructed) {\n            // must have valid content\n            sub = getSub();\n        }\n        else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\n            // sometimes BitString and OctetString are used to encapsulate ASN.1\n            try {\n                if (tag.tagNumber == 0x03) {\n                    if (stream.get() != 0) {\n                        throw new Error(\"BIT STRINGs with unused bits cannot encapsulate.\");\n                    }\n                }\n                sub = getSub();\n                for (var i = 0; i < sub.length; ++i) {\n                    if (sub[i].tag.isEOC()) {\n                        throw new Error(\"EOC is not supposed to be actual content.\");\n                    }\n                }\n            }\n            catch (e) {\n                // but silently ignore when they don't\n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null) {\n                throw new Error(\"We can't skip over an invalid tag with undefined length at offset \" + start);\n            }\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    };\n    return ASN1;\n}());\nexport { ASN1 };\nvar ASN1Tag = /** @class */ (function () {\n    function ASN1Tag(stream) {\n        var buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = ((buf & 0x20) !== 0);\n        this.tagNumber = buf & 0x1F;\n        if (this.tagNumber == 0x1F) { // long tag\n            var n = new Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7F);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n    ASN1Tag.prototype.isUniversal = function () {\n        return this.tagClass === 0x00;\n    };\n    ASN1Tag.prototype.isEOC = function () {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    };\n    return ASN1Tag;\n}());\nexport { ASN1Tag };\n"]},"metadata":{},"sourceType":"module"}