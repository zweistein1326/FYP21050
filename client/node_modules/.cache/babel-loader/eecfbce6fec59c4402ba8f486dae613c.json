{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Credential.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Credential = props => {\n  _s();\n\n  const [isAuth, setAuth] = useState(props.auth.user !== null //set inital to public\n  );\n  const {\n    credentialId\n  } = useParams();\n\n  const fetchCredentialInfo = () => {\n    credential = Object.values(props.auth.user.credentials).find(id => id == credentialId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Hi this is credential no. \", `${credentialId}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${props.auth.user.degreeCertificate.issuer}`,\n        children: [\"Issuer: \", props.auth.user.degreeCertificate.issuer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${props.auth.user.degreeCertificate.issuer}`,\n        children: [\"Signature: \", props.auth.user.degreeCertificate.signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: props.auth.user.degreeCertificate.url,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Url: \", props.auth.user.degreeCertificate.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"View History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Credential, \"FdQJ8/fei/HLsWhLBHucdXvwNUc=\", false, function () {\n  return [useParams];\n});\n\n_c = Credential;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Credential);\n\nvar _c;\n\n$RefreshReg$(_c, \"Credential\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Credential.tsx"],"names":["Typography","useState","connect","Link","useParams","Credential","props","isAuth","setAuth","auth","user","credentialId","fetchCredentialInfo","credential","Object","values","credentials","find","id","degreeCertificate","issuer","signature","url","mapStateToProps","state"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,eAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAe;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAAQC,OAAR,IAAmBP,QAAQ,CAC7BK,KAAK,CAACG,IAAN,CAAWC,IAAX,KAAoB,IADS,CACJ;AADI,GAAjC;AAGA,QAAM;AAACC,IAAAA;AAAD,MAAiBP,SAAS,EAAhC;;AAEA,QAAMQ,mBAAmB,GAAG,MAAM;AAC9BC,IAAAA,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBM,WAA9B,EAA2CC,IAA3C,CAAiDC,EAAD,IAAMA,EAAE,IAAIP,YAA5D,CAAb;AACC,GAFL;;AAIA,sBACI;AAAA,4BACA,QAAC,UAAD;AAAA,+CACgC,GAAEA,YAAa,EAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,UAAD;AAAA,6BAAY,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,SAAQL,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBS,iBAAhB,CAAkCC,MAAO,EAA5D;AAAA,+BAAwEd,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBS,iBAAhB,CAAkCC,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,UAAD;AAAA,6BAAY,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,SAAQd,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBS,iBAAhB,CAAkCC,MAAO,EAA5D;AAAA,kCAA2Ed,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBS,iBAAhB,CAAkCE,SAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAG,MAAA,IAAI,EAAEf,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBS,iBAAhB,CAAkCG,GAA3C;AAAA,6BAAgD,QAAC,UAAD;AAAA,4BAAkBhB,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBS,iBAAhB,CAAkCG,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,YANA,eAOA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADJ;AAWH,CArBD;;GAAMjB,U;UAIqBD,S;;;KAJrBC,U;;AAuBN,MAAMkB,eAAe,GAAGC,KAAD,KAAc;AACjCf,EAAAA,IAAI,EAACe,KAAK,CAACf;AADsB,CAAd,CAAvB;;AAIA,eAAeP,OAAO,CAACqB,eAAD,CAAP,CAAyBlB,UAAzB,CAAf","sourcesContent":["import {Typography} from '@mui/material';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\n\n\nconst Credential = (props:any) => {\n    const [isAuth,setAuth] = useState(\n        props.auth.user !== null //set inital to public\n    );    \n    const {credentialId} = useParams();\n\n    const fetchCredentialInfo = () => {\n        credential = Object.values(props.auth.user.credentials).find((id)=>id == credentialId)\n        }\n\n    return(\n        <>\n        <Typography>\n            Hi this is credential no. {`${credentialId}`}\n        </Typography>\n        <Typography><Link to={`/user/${props.auth.user.degreeCertificate.issuer}`}>Issuer: {props.auth.user.degreeCertificate.issuer}</Link></Typography>\n        <Typography><Link to={`/user/${props.auth.user.degreeCertificate.issuer}`}>Signature: {props.auth.user.degreeCertificate.signature}</Link></Typography>\n        <a href={props.auth.user.degreeCertificate.url}><Typography>Url: {props.auth.user.degreeCertificate.url}</Typography></a>\n        <Typography>View History</Typography>\n        </>\n    )\n}\n\nconst mapStateToProps =(state:any)=>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps)(Credential);"]},"metadata":{},"sourceType":"module"}