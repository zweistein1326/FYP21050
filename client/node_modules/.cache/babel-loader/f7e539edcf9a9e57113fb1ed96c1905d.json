{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/routers/PrivateRoute.tsx\";\nimport { connect } from \"react-redux\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = _ref => {\n  let {\n    isAuthenticated,\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 73\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 8\n  }, this);\n};\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: !!state.auth.user.id\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/routers/PrivateRoute.tsx"],"names":["connect","Route","Navigate","Header","PrivateRoute","isAuthenticated","component","Component","rest","props","mapStateToProps","state","auth","user","id"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,OAAO,MAAMC,YAAY,GAAG;AAAA,MAAC;AACzBC,IAAAA,eADyB;AAEzBC,IAAAA,SAAS,EAAEC,SAFc;AAGzB,OAAGC;AAHsB,GAAD;AAAA,sBAIrB,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,SAAS,EAAGC,KAAD,IAC/BJ,eAAe,gBAAI;AAAA,8BAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAL,eAAe,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAqD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADjE;AAAA;AAAA;AAAA;AAAA,UAJqB;AAAA,CAArB;KAAML,Y;;AAUb,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,eAAe,EAAE,CAAC,CAACM,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC;AADH,CAAZ,CAAxB;;AAIA,eAAed,OAAO,CAACU,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport Header from \"../components/Header\";\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => (<Route {...rest} component={(props) => (\n    isAuthenticated ? (<div><Header /><Component {...props} /></div>) : <Navigate to='/' />\n)} />)\n\n\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: !!state.auth.user.id\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}