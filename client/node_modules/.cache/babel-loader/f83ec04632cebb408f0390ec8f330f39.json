{"ast":null,"code":"var _jsxFileName = \"/Users/sid/Desktop/SSOB/sso/client/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from '@apollo/client';\nimport { Box, Button, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useParams } from 'react-router-dom';\nimport CredentialTile from '../components/CredentialTile';\nimport Header from '../components/Header';\nimport { GETUSERBYID } from '../graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [loggedIn, setLoggedIn] = useState(props.auth.user !== null);\n  const [activeUser, setActiveUser] = useState({});\n  const [fetchInfo, {\n    loading,\n    error\n  }] = useMutation(GETUSERBYID);\n  const [account, setAccount] = useState(null);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n\n  const {\n    id\n  } = useParams();\n  const {\n    ethereum\n  } = window;\n\n  const connectWalletHandler = async () => {\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getUserInfo = async () => {\n    console.log(id);\n    await connectWalletHandler();\n    fetchInfo({\n      variables: {\n        id\n      }\n    }).then(res => {\n      let user = res.data.getUserById.user;\n      setActiveUser(user);\n      const activeCredentials = user.credentials.map(credential => credential.status == true);\n      setActiveCredentials();\n    });\n  };\n\n  useEffect(() => {\n    getUserInfo();\n  }, activeUser);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [\"User information\", /*#__PURE__*/_jsxDEV(Header, {\n        setLoggedIn: setLoggedIn,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '20vw',\n          height: '100vh',\n          mt: 2,\n          backgroundColor: 'beige',\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"My photo (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            display: 'inline'\n          },\n          children: [\"DID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [activeUser.id, \" (@\", activeUser.username, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Name: \", activeUser.firstname, \" \", activeUser.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Email: \", activeUser.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          variant: \"contained\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/addCredential`,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                color: 'white'\n              },\n              children: \"Add new Credential\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 85\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '60vw',\n          height: '100vh',\n          m: 3\n        },\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: activeUser.id == props.auth.user.id ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '30%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Issued Credentials\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Show credential issued by this user -> View all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 11\n              }, this), activeUser.credentials ? Object.values(activeUser.credentials).map((credential, index) => credential.pending ? /*#__PURE__*/_jsxDEV(CredentialTile, {\n                credential: credential,\n                title: Object.keys(activeUser.credentials)[index]\n              }, credential.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 103\n              }, this) : null) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '30%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Pending Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 11\n              }, this), activeUser.credentials ? Object.values(activeUser.credentials).map((credential, index) => credential.pending ? /*#__PURE__*/_jsxDEV(CredentialTile, {\n                credential: credential,\n                title: Object.keys(activeUser.credentials)[index]\n              }, credential.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 103\n              }, this) : null) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '30%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Accepted credentials\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 11\n              }, this), activeUser.credentials ? Object.values(activeUser.credentials).map((credential, index) => !credential.pending ? /*#__PURE__*/_jsxDEV(CredentialTile, {\n                credential: credential,\n                title: Object.keys(activeUser.credentials)[index]\n              }, credential.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 104\n              }, this) : null) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this) : null\n        }, void 0, false) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"GchCUGPaMJwsPX634knMUi+HOE4=\", false, function () {\n  return [useNavigate, useMutation, useParams];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sid/Desktop/SSOB/sso/client/src/pages/Home.tsx"],"names":["useMutation","Box","Button","Typography","useEffect","useState","connect","useNavigate","Link","useParams","CredentialTile","Header","GETUSERBYID","Home","props","navigate","loggedIn","setLoggedIn","auth","user","activeUser","setActiveUser","fetchInfo","loading","error","account","setAccount","handleLogout","localStorage","removeItem","id","ethereum","window","connectWalletHandler","accounts","request","method","err","console","log","getUserInfo","variables","then","res","data","getUserById","activeCredentials","credentials","map","credential","status","setActiveCredentials","display","width","height","mt","backgroundColor","p","fontWeight","username","firstname","lastname","email","mb","color","m","Object","values","index","pending","keys","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { Box, Button, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Link, useParams } from 'react-router-dom';\nimport CredentialTile from '../components/CredentialTile';\nimport Header from '../components/Header';\nimport { GETUSERBYID } from '../graphql';\nimport { User } from '../models/User';\ndeclare var window:any;\n\nconst Home = (props:any) => {\n  const navigate = useNavigate();\n  const [loggedIn, setLoggedIn] = useState(\n    props.auth.user !==null ,\n  );\n  const [activeUser,setActiveUser] = useState<any>({});\n  const [fetchInfo,{loading,error}] = useMutation(GETUSERBYID);\n  const [account, setAccount] = useState<any>(null);\n  \n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n  \n  const {id} = useParams();\n\n  const {ethereum} = window;\n\n  const connectWalletHandler = async () => {\n    try{\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      setAccount(accounts[0]);\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  const getUserInfo = async () =>{\n    console.log(id);\n    await connectWalletHandler();\n    fetchInfo({\n      variables: {\n        id\n    },\n  })\n    .then((res)=>{\n      let user:User = res.data.getUserById.user;\n      setActiveUser(user);\n      const activeCredentials = user.credentials.map((credential)=>credential.status == true);\n      setActiveCredentials()\n    })\n  }\n\n  useEffect(()=>{ \n    getUserInfo()\n  },activeUser);\n\n\n  return (\n    <Box>\n    <Box >\n    User information\n      <Header setLoggedIn={setLoggedIn} loggedIn={loggedIn}/>\n    </Box>\n    <Box sx={{display:'flex'}}>\n    <Box sx={{width:'20vw', height:'100vh', mt:2, backgroundColor:'beige', p:3}}>\n      <Typography>\n          My photo (optional)\n        </Typography>\n        {/* <Typography>\n          Metamask account address: {account}\n        </Typography> */}\n        <Typography sx={{display:'inline'}}>\n          DID: <span style={{fontWeight:'bold'}}>{activeUser.id} (@{activeUser.username})</span>\n        </Typography>\n        <Typography>\n          Name: {activeUser.firstname} {activeUser.lastname}\n        </Typography>\n        <Typography>\n          Email: {activeUser.email}\n        </Typography>\n        <Button sx={{ mt:3, mb:2 }} variant=\"contained\"><Link to={`/addCredential`}><Typography sx={{color:'white'}}>Add new Credential</Typography></Link></Button>\n    </Box>\n      {/* <Typography>\n        {loggedIn && props.auth.user ? '' : 'Not logged-in'} \n      </Typography> */}\n      <Box sx={{width:'60vw', height:'100vh', m:3}}>\n      {loggedIn ?\n      <>\n        {activeUser.id == props.auth.user.id?\n        <Box display='flex'>\n          <Box sx={{width:'30%'}}>\n          <Typography variant=\"h4\" >\n            Issued Credentials\n          </Typography>\n          <Typography >\n            Show credential issued by this user -&gt; View all\n          </Typography>\n          {activeUser.credentials ?\n          Object.values(activeUser.credentials).map((credential:any,index:number)=>credential.pending?<CredentialTile key={credential.id} credential={credential} title={Object.keys(activeUser.credentials)[index]} />:null)\n          :''}\n          </Box>\n          <Box sx={{width:'30%'}}>\n          <Typography variant=\"h4\" >\n            Pending Requests\n          </Typography>\n          {activeUser.credentials ?\n          Object.values(activeUser.credentials).map((credential:any,index:number)=>credential.pending?<CredentialTile key={credential.id} credential={credential} title={Object.keys(activeUser.credentials)[index]} />:null)\n          :''}\n          </Box>\n          <Box sx={{width:'30%'}}>\n          <Typography variant=\"h4\">\n            Accepted credentials\n          </Typography>\n          {activeUser.credentials ?\n          Object.values(activeUser.credentials).map((credential:any,index:number)=>!credential.pending?<CredentialTile key={credential.id} credential={credential} title={Object.keys(activeUser.credentials)[index]} />:null)\n          :''}\n          </Box>\n        </Box>:\n        null}\n      </>: null}\n      </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state:any) => ({\n  auth:state.auth\n})\n\nexport default connect(mapStateToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}